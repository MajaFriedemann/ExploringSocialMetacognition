out
}
block2 <- singleAdvisorTrials(AdvisedTrial)
block2Decisions <- singleAdvisorTrials(decisions)
tmp <- markerBreakdown(proportion, PP, hideMarkerTotal = T)
# Proportions within a row should sum to 1
for (x in tmp)
expect_equal(apply(x[, 3:5], 1, sum), rep(1, nrow(x)))
num2str.tibble(tmp$first, isProportion = T, precision = 3)
num2str.tibble(tmp$last, isProportion = T, precision = 3)
ggplot(PP[!is.na(PP$responseMarker), ],
aes(x = responseMarker, y = proportion)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(hasFeedback ~ decision, labeller = label_both) +
scale_linetype_manual(values = c("dashed")) +
labs(x = "response marker width (years)",
y = "p(marker used)")
tmp <- markerBreakdown(responseCorrect, decisions)
num2str.tibble(tmp$first, isProportion = T, precision = 3)
num2str.tibble(tmp$last, isProportion = T, precision = 3)
ggplot(aggregate(responseCorrect ~
responseMarker + decision + hasFeedback + pid,
decisions, mean),
aes(x = responseMarker, y = responseCorrect)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(hasFeedback ~ decision, labeller = label_both) +
scale_linetype_manual(values = c("dashed")) +
labs(x = "response marker width (years)",
y = "p(response correct)")
tmp <- markerBreakdown(responseError, decisions)
num2str.tibble(tmp$first)
num2str.tibble(tmp$last)
ggplot(aggregate(responseError ~
responseMarker + decision + hasFeedback + pid,
decisions, mean),
aes(x = responseMarker, y = responseError)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(hasFeedback ~ decision, labeller = label_both) +
scale_linetype_manual(values = c("dashed")) +
labs(x = "response marker width (years)",
y = "|target - response marker centre| (years)")
tmp <- markerBreakdown(responseError, block2Decisions)
num2str.tibble(tmp$first)
num2str.tibble(tmp$last)
ggplot(aggregate(responseError ~
responseMarker + decision + hasFeedback + pid,
block2Decisions, mean),
aes(x = responseMarker, y = responseError)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(hasFeedback ~ decision, labeller = label_both) +
scale_linetype_manual(values = c("dashed")) +
labs(x = "response marker width (years)",
y = "|target - response marker centre| (years)")
tmp <- markerBreakdown(responseScore, decisions)
num2str.tibble(tmp$first)
num2str.tibble(tmp$last)
ggplot(aggregate(responseScore ~
responseMarker + decision + hasFeedback + pid,
decisions, mean),
aes(x = responseMarker, y = responseScore)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(hasFeedback ~ decision, labeller = label_both) +
scale_linetype_manual(values = c("dashed")) +
labs(x = "response marker width (years)",
y = "points scored")
tmp <- markerBreakdown(timeEnd, decisions)
num2str.tibble(tmp$last)
ggplot(aggregate(timeEnd ~
responseMarker + decision + hasFeedback + pid,
decisions, mean),
aes(x = responseMarker,
y = timeEnd / 1000)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(~ hasFeedback, labeller = label_both) +
scale_linetype_manual(values = c("dashed")) +
labs(x = "response marker width (years)",
y = "response time (s)")
decisions$rt <- decisions$responseTimeEstimate - decisions$timeResponseOpen
tmp <- markerBreakdown(rt, decisions)
num2str.tibble(tmp$first)
num2str.tibble(tmp$last)
ggplot(aggregate(rt ~
responseMarker + decision + hasFeedback + pid,
decisions, mean),
aes(x = responseMarker,
y = rt / 1000)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(hasFeedback ~ decision, labeller = label_both) +
scale_linetype_manual(values = c("dashed")) +
labs(x = "response marker width (years)",
y = "response time (s)")
as.tibble(aggregate(meanPosition ~ idDescription + hasFeedback, advisors, mean))
out <- list()
for (f in unique(AdvisedTrial$hasFeedback)) {
m <- AdvisedTrial$hasFeedback == f
tmp <- NULL
for (a in advisorNames) {
r <- tibble(feedback = f, advisor = a)
for (x in adviceTypes) {
eq <- as.formula(paste0(a, ".nominalType ~ pid"))
r[, x] <- mean(aggregate(eq,
AdvisedTrial[m, ],
function(q) mean(q == x))[, 2])
}
tmp <- rbind(tmp, r)
}
out[[as.character(f)]] <- tmp
}
prop2str(out$`TRUE`, precision = 3)
prop2str(out$`FALSE`, precision = 3)
out <- list()
for (f in unique(AdvisedTrial$hasFeedback)) {
m <- AdvisedTrial$hasFeedback == f
tmp <- NULL
for (a in advisorNames) {
r <- tibble(feedback = f, advisor = a)
for (x in adviceTypes) {
eq <- as.formula(paste0(a, ".actualType ~ pid"))
r[, x] <- mean(aggregate(eq,
AdvisedTrial[m, ],
function(q) mean(q == x))[, 2])
}
tmp <- rbind(tmp, r)
}
out[[as.character(f)]] <- tmp
}
prop2str(out$`TRUE`, precision = 3)
prop2str(out$`FALSE`, precision = 3)
tmp <- NULL
for (a in advisorNames) {
eq <- as.formula(paste0("cbind(", a, ".accurate, ",
a, ".error) ~ pid + hasFeedback"))
r <- aggregate(eq, AdvisedTrial, mean, na.rm = T)
colnames(r) <- c("pid", "feedback", "accuracy", "error")
r$advisor = a
tmp <- rbind(tmp, as.tibble(r))
}
prop2str(as.tibble(aggregate(cbind(accuracy, error) ~ advisor + feedback,
tmp,
mean, na.rm = T)),
precision = 3)
tmp <- gather(tmp, "var", "value", accuracy:error)
ggplot(tmp, aes(x = advisor, y = value, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(var ~ feedback, scales = "free_y", labeller = label_both)
tmp <- NULL
for (a in advisorNames) {
eq <- as.formula(paste0(a, ".agree ~ pid + hasFeedback"))
r <- aggregate(eq, AdvisedTrial, mean, na.rm = T)
colnames(r) <- c("pid", "feedback", "agreement")
r$advisor <- a
tmp <- rbind(tmp, r)
}
prop2str(as.tibble(aggregate(agreement ~ advisor + feedback,
tmp, mean, na.rm = T)),
precision = 3)
ggplot(tmp, aes(x = advisor, y = agreement, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_wrap(~feedback, labeller = label_both)
tmp <- NULL
for (a in advisorNames) {
eq <- as.formula(paste0(a, ".distance ~ pid + hasFeedback"))
r <- aggregate(eq, AdvisedTrial, mean, na.rm = T)
colnames(r) <- c("pid", "feedback", "distance")
r$advisor = a
tmp <- rbind(tmp, as.tibble(r))
}
prop2str(as.tibble(aggregate(distance ~ advisor + feedback,
tmp,
mean, na.rm = T)),
precision = 3)
ggplot(tmp, aes(x = advisor, y = distance, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_wrap(~ feedback, labeller = label_both)
tmp <- NULL
for (a in advisorNames) {
eq <- as.formula(paste0(a, ".woa ~ pid + hasFeedback"))
r <- aggregate(eq, AdvisedTrial, mean, na.rm = T)
colnames(r) <- c("pid", "feedback", "WoA")
r$advisor <- a
tmp <- rbind(tmp, r)
}
prop2str(as.tibble(aggregate(WoA ~ advisor + feedback, tmp, mean, na.rm = T)),
precision = 3)
ggplot(tmp, aes(x = advisor, y = WoA, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_wrap(~feedback, labeller = label_both)
tmp <- NULL
for (a in advisorNames) {
x <- block2[block2$advisor0idDescription == a, ]
eq <- as.formula(paste0(a, ".woa ~ pid + hasFeedback"))
r <- aggregate(eq, x, mean, na.rm = T)
colnames(r) <- c("pid", "feedback", "WoA")
r$advisor <- a
tmp <- rbind(tmp, r)
}
prop2str(as.tibble(aggregate(WoA ~ advisor + feedback, tmp, mean, na.rm = T)),
precision = 3)
ggplot(tmp, aes(x = advisor, y = WoA, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_wrap(~feedback, labeller = label_both)
low <- 0
high <- 1
n <- 11
block2$woa <- ""
for (x in c("woa", "woaRaw")) {
block2[, paste0("advisor0", x)] <- sapply(1:nrow(block2), function(i)
unlist(block2[i,
paste0(as.character(block2$advisor0idDescription[i]),
".", x)]))
}
block2$woa[block2$advisor0woaRaw >= 1] <- ">=1"
for (x in rev(seq(low, high, length.out = n))) {
block2$woa[block2$advisor0woaRaw < x] <- paste0("<", x)
}
block2$woa <- factor(block2$woa)
block2 <- block2[!is.nan(block2$advisor0woaRaw), ]
ggplot(block2, aes(woa)) +
geom_histogram(stat = "count") +
facet_grid(hasFeedback ~ advisor0idDescription, labeller = label_both)
tmp <- aggregate(accuracyChange ~ pid + hasFeedback,
AdvisedTrial, mean, na.rm = T)
num2str(as.tibble(aggregate(accuracyChange ~ hasFeedback,
tmp, mean, na.rm = T)))
ggplot(tmp, aes(x = hasFeedback, y = accuracyChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA, aes(group = hasFeedback)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid))
tmp <- aggregate(accuracyChange ~ pid + hasFeedback + advisor0idDescription,
block2, mean, na.rm = T)
num2str(as.tibble(aggregate(accuracyChange ~
hasFeedback + advisor0idDescription,
tmp, mean, na.rm = T)))
ggplot(tmp,
aes(x = advisor0idDescription, y = accuracyChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA,
aes(group = advisor0idDescription)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid)) +
facet_wrap(~hasFeedback, labeller = label_both)
tmp <- aggregate(scoreChange ~ pid + hasFeedback, AdvisedTrial, mean, na.rm = T)
num2str(as.tibble(aggregate(scoreChange ~ hasFeedback, tmp, mean, na.rm = T)))
ggplot(tmp, aes(x = hasFeedback, y = scoreChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA, aes(group = hasFeedback)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid))
tmp <- aggregate(scoreChange ~ pid + hasFeedback + advisor0idDescription,
block2, mean, na.rm = T)
num2str(as.tibble(aggregate(scoreChange ~
hasFeedback + advisor0idDescription,
tmp, mean, na.rm = T)))
ggplot(tmp, aes(x = advisor0idDescription, y = scoreChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA,
aes(group = advisor0idDescription)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid)) +
facet_wrap(~hasFeedback, labeller = label_both)
tmp <- aggregate(estimateLeftChange ~ pid + hasFeedback,
AdvisedTrial, mean, na.rm = T)
num2str(as.tibble(aggregate(estimateLeftChange ~ hasFeedback,
tmp, mean, na.rm = T)))
ggplot(tmp, aes(x = hasFeedback, y = estimateLeftChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA, aes(group = hasFeedback)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid))
tmp <- aggregate(estimateLeftChange ~
pid + hasFeedback + advisor0idDescription,
block2, mean, na.rm = T)
num2str(as.tibble(aggregate(estimateLeftChange ~
hasFeedback + advisor0idDescription,
tmp, mean, na.rm = T)))
ggplot(tmp,
aes(x = advisor0idDescription, y = estimateLeftChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA,
aes(group = advisor0idDescription)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid)) +
facet_wrap(~hasFeedback, labeller = label_both)
tmp <- aggregate(confidenceChange ~ pid + hasFeedback,
AdvisedTrial, mean, na.rm = T)
num2str(as.tibble(aggregate(confidenceChange ~ hasFeedback,
tmp, mean, na.rm = T)))
ggplot(tmp, aes(x = hasFeedback, y = confidenceChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA, aes(group = hasFeedback)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid))
tmp <- aggregate(confidenceChange ~
pid + hasFeedback + advisor0idDescription,
block2, mean, na.rm = T)
num2str(as.tibble(aggregate(confidenceChange ~
hasFeedback + advisor0idDescription,
tmp, mean, na.rm = T)))
ggplot(tmp,
aes(x = advisor0idDescription, y = confidenceChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA,
aes(group = advisor0idDescription)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid)) +
facet_wrap(~hasFeedback, labeller = label_both)
eq <- NULL
tmp <- NULL
for (a in advisorNames) {
eq <- as.formula(paste0(a, ".agreementChange", " ~ pid + hasFeedback"))
x <- aggregate(eq, AdvisedTrial, mean, na.rm = T)
if (is.null(tmp)) {
tmp <- x
} else {
tmp <- left_join(tmp, x, by = c("pid", "hasFeedback"))
}
}
tmp <- gather(tmp, "advisor", "agreementChange",
grep("\\.agreementChange", names(tmp)))
tmp$advisor <- sapply(tmp$advisor, function(s) reFirstMatch("([^\\.]+)", s))
num2str(as.tibble(aggregate(agreementChange ~ hasFeedback,
tmp, mean, na.rm = T)))
ggplot(tmp, aes(x = advisor, y = agreementChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA, aes(group = advisor)) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_wrap(~hasFeedback, labeller = label_both)
tmp <- aggregate(cbind(responseError, responseErrorFinal) ~ pid,
block2,
mean, na.rm = T)
r <- md.ttest(tmp$responseErrorFinal, tmp$responseError,
c("*M*|last", "*M*|first"), paired = T)
cat(r)
tmp <- aggregate(cbind(responseScore, responseScoreFinal) ~ pid,
block2,
mean, na.rm = T)
r <- md.ttest(tmp$responseScoreFinal, tmp$responseScore,
c("*M*|last", "*M*|first"), paired = T)
cat(r)
tmp <- aggregate(cbind(responseCorrect, responseCorrectFinal) ~ pid,
block2,
mean, na.rm = T)
r <- md.ttest(tmp$responseCorrectFinal,
tmp$responseCorrect,
c("*M*|last", "*M*|first"),
paired = T)
cat(r)
tmp <- aggregate(cbind(responseError, responseErrorFinal) ~ pid,
AdvisedTrial[AdvisedTrial$hasFeedback, ],
mean, na.rm = T)
r <- md.ttest(tmp$responseErrorFinal, tmp$responseError,
c("*M*|last", "*M*|first"),
paired = T)
cat(r)
tmp <- aggregate(cbind(responseScore, responseScoreFinal) ~ pid,
AdvisedTrial[AdvisedTrial$hasFeedback, ],
mean, na.rm = T)
r <- md.ttest(tmp$responseScoreFinal, tmp$responseScore,
c("*M*|last", "*M*|first"),
paired = T)
cat(r)
tmp <- aggregate(cbind(responseError, responseErrorFinal) ~ pid,
AdvisedTrial[!AdvisedTrial$hasFeedback, ],
mean, na.rm = T)
r <- md.ttest(tmp$responseErrorFinal, tmp$responseError,
c("*M*|last", "*M*|first"),
paired = T)
cat(r)
tmp <- aggregate(cbind(responseScore, responseScoreFinal) ~ pid,
AdvisedTrial[!AdvisedTrial$hasFeedback, ],
mean, na.rm = T)
r <- md.ttest(tmp$responseScoreFinal, tmp$responseScore,
c("*M*|last", "*M*|first"),
paired = T)
cat(r)
tmp <- aggregate(Accurate.woa ~ pid + hasFeedback,
AdvisedTrial, mean, na.rm = T)
r <- md.ttest(tmp$Accurate.woa[tmp$hasFeedback],
tmp$Accurate.woa[!tmp$hasFeedback],
labels = c("*M*|feedback", "*M*|¬feedback"))
cat(r)
tmp <- aggregate(Agreeing.woa ~ pid + hasFeedback,
AdvisedTrial, mean, na.rm = T)
r <- md.ttest(tmp$Agreeing.woa[tmp$hasFeedback],
tmp$Agreeing.woa[!tmp$hasFeedback],
labels = c("*M*|feedback", "*M*|¬feedback"))
cat(r)
tmp <- aggregate(advisor0woa ~
pid + hasFeedback + advisor0idDescription,
block2, mean)
cat("No feedback: ")
cat(md.ttest(tmp$advisor0woa[tmp$hasFeedback &
tmp$advisor0idDescription == "Agreeing"],
tmp$advisor0woa[tmp$hasFeedback &
tmp$advisor0idDescription != "Agreeing"],
labels = c("*M*|agr", "*M*|acc"),
paired = T))
cat("\n<br/>\nFeedback: ")
cat(md.ttest(tmp$advisor0woa[!tmp$hasFeedback &
tmp$advisor0idDescription == "Agreeing"],
tmp$advisor0woa[!tmp$hasFeedback &
tmp$advisor0idDescription != "Agreeing"],
labels = c("*M*|agr", "*M*|acc"),
paired = T))
# calculate woa for the advisor
tmp <- aggregate(advisor0woa ~
pid + hasFeedback + advisor0idDescription,
block2, mean, na.rm = T)
tmp$hasFeedback <- factor(tmp$hasFeedback)
r <- BANOVA.Normal(l1_formula = advisor0woa ~ advisor0idDescription,
l2_formula = ~ hasFeedback,
data = tmp,
id = tmp$pid)
r
# list packages
packageNames <- (.packages())
# don't include very core package
packageNames <- packageNames[!(packageNames %in%
rownames(installed.packages(
priority = "base")))]
# but do include the base package
packageNames <- c("base", packageNames)
out <- NULL
for (p in packageNames) {
out <- rbind(out, data.frame('Package' = p,
'Citations' = paste(format(citation(p),
style = 'textVersion'),
collapse = '<br/><br/>')))
}
kable(out)
cat(paste('Time stamp:', Sys.time(), '\n\n'))
cat('Runtime \n')
proc.time()
cat('\n\n')
sessionInfo()
?choicedata
choicedata
data("choicedata")
names(choicedata)
?BANOVA.Multinomial
