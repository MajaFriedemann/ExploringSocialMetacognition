tmp$initialCorrect[i] - x
})
data <- aggregate(delta ~ pid + swapped, data = tmp[tmp$isRepeat, ], FUN = mean)
data <- aggregate(delta ~ pid + swapped, data = tmp[tmp$isRepeat, ], FUN = mean)
data
md.ttestBF(data$delta[!data$swapped], data$delta[data$swapped], labels = c('*M*|same', '*M*|swapped'), paired = T)
tmp <- trials[trials$grid %in% trials$grid[!is.na(trials$stimulusParent)], ]
m <- is.na(tmp$stimulusParent)
df.type2 <- NULL
for(p in unique(trials$pid)) {
for(x in c(T, F)) {
ts <- tmp[m == x, c('initialCorrect', 'initialConfidence')]
ts <- ts[!is.na(ts$initialConfidence) & !is.na(ts$initialCorrect), ]
roc <- type2ROC(ts[ ,1], ts[ ,2], bins = 7)
df.type2 <- rbind(df.type2, data.frame(pid = factor(p), isRep = !x, conf = roc$x, pCorrect = roc$y))
}
}
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf)))
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
df.type2$confProp <- sapply(df.type2$conf, function(x) tmp[which(levels(df.type2$conf) == x)])
tmp <- aggregate(pCorrect ~ conf + isRep, df.type2, mean)
# print neatly with rounding
tmp[ ,3] <- prop2str(tmp[ ,3])
kable(prop2str(tmp))
ggplot(df.type2, aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(alpha = .5, aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
unique(trials$pid)
df.type2
ggplot(df.type2, aes(x = conf, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(alpha = .5, aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2, aes(x = conf, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(alpha = .5, aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
#scale_x_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2, aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(alpha = .5, aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
df.type2
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(alpha = .5, aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(alpha = .5, aes(group = 1)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(alpha = .5, aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(alpha = .5, aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(alpha = .5, aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid, group = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(alpha = .5) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
x <- ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(alpha = .5, aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
x
x$data$pid
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line() +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(aes(groups = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(aes(group = factor(pid))) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style.long +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[!is.na(df.type2$confProp),], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[df.type2$pid < 3,], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[df.type2$pid == 3,], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style +
theme(panel.spacing.x = unit(1, 'lines'))
ggplot(df.type2[df.type2$pid == 4,], aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style +
theme(panel.spacing.x = unit(1, 'lines'))
df.type2
tmp <- trials[trials$grid %in% trials$grid[!is.na(trials$stimulusParent)], ]
df.type2 <- NULL
for(p in unique(trials$pid)) {
for(x in c(T, F)) {
ts <- tmp[isRep == x & pid == p, c('initialCorrect', 'initialConfidence')]
ts <- ts[!is.na(ts$initialConfidence) & !is.na(ts$initialCorrect), ]
roc <- type2ROC(ts[ ,1], ts[ ,2], bins = 7)
df.type2 <- rbind(df.type2, data.frame(pid = factor(p), isRep = !x, conf = roc$x, pCorrect = roc$y))
}
}
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf)))
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
df.type2$confProp <- sapply(df.type2$conf, function(x) tmp[which(levels(df.type2$conf) == x)])
tmp <- aggregate(pCorrect ~ conf + isRep, df.type2, mean)
# print neatly with rounding
tmp[ ,3] <- prop2str(tmp[ ,3])
kable(prop2str(tmp))
tmp <- trials[trials$grid %in% trials$grid[!is.na(trials$stimulusParent)], ]
df.type2 <- NULL
for(p in unique(trials$pid)) {
for(x in c(T, F)) {
ts <- tmp[tmp$isRep == x & pid == p, c('initialCorrect', 'initialConfidence')]
ts <- ts[!is.na(ts$initialConfidence) & !is.na(ts$initialCorrect), ]
roc <- type2ROC(ts[ ,1], ts[ ,2], bins = 7)
df.type2 <- rbind(df.type2, data.frame(pid = factor(p), isRep = !x, conf = roc$x, pCorrect = roc$y))
}
}
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf)))
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
df.type2$confProp <- sapply(df.type2$conf, function(x) tmp[which(levels(df.type2$conf) == x)])
tmp <- aggregate(pCorrect ~ conf + isRep, df.type2, mean)
# print neatly with rounding
tmp[ ,3] <- prop2str(tmp[ ,3])
kable(prop2str(tmp))
tmp <- trials[trials$grid %in% trials$grid[!is.na(trials$stimulusParent)], ]
df.type2 <- NULL
for(p in unique(trials$pid)) {
for(x in c(T, F)) {
ts <- tmp[tmp$isRep == x & pid == p, c('initialCorrect', 'initialConfidence')]
ts <- ts[!is.na(ts$initialConfidence) & !is.na(ts$initialCorrect), ]
roc <- type2ROC(ts[ ,1], ts[ ,2], bins = 7)
df.type2 <- rbind(df.type2, data.frame(pid = factor(p), isRep = !x, conf = roc$x, pCorrect = roc$y))
}
}
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf)))
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
df.type2$confProp <- sapply(df.type2$conf, function(x) tmp[which(levels(df.type2$conf) == x)])
tmp <- aggregate(pCorrect ~ conf + isRep, df.type2, mean)
# print neatly with rounding
tmp[ ,3] <- prop2str(tmp[ ,3])
kable(prop2str(tmp))
tmp[tmp$isRep == x & pid == p, c('initialCorrect', 'initialConfidence')]
p
x
tmp$isRep == x & pid == p
tmp <- trials[trials$isRepeat | trials$isRepeated, ]
df.type2 <- NULL
for(p in unique(trials$pid)) {
for(x in c(T, F)) {
ts <- tmp[tmp$isRep == x & pid == p, c('initialCorrect', 'initialConfidence')]
ts <- ts[!is.na(ts$initialConfidence) & !is.na(ts$initialCorrect), ]
roc <- type2ROC(ts[ ,1], ts[ ,2], bins = 7)
df.type2 <- rbind(df.type2, data.frame(pid = factor(p), isRep = !x, conf = roc$x, pCorrect = roc$y))
}
}
tmp[tmp$isRep == x & pid == p, c('initialCorrect', 'initialConfidence')]
tmp
tmp$isRep == x & pid == p
tmp <- trials[trials$isRepeat | trials$isRepeated, ]
df.type2 <- NULL
for(p in unique(trials$pid)) {
for(x in c(T, F)) {
ts <- tmp[tmp$isRepeat == x & pid == p, c('initialCorrect', 'initialConfidence')]
ts <- ts[!is.na(ts$initialConfidence) & !is.na(ts$initialCorrect), ]
roc <- type2ROC(ts[ ,1], ts[ ,2], bins = 7)
df.type2 <- rbind(df.type2, data.frame(pid = factor(p), isRep = !x, conf = roc$x, pCorrect = roc$y))
}
}
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf)))
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
df.type2$confProp <- sapply(df.type2$conf, function(x) tmp[which(levels(df.type2$conf) == x)])
tmp <- aggregate(pCorrect ~ conf + isRep, df.type2, mean)
# print neatly with rounding
tmp[ ,3] <- prop2str(tmp[ ,3])
kable(prop2str(tmp))
ggplot(df.type2, aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style +
theme(panel.spacing.x = unit(1, 'lines'))
df.type2
tmp
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf)))
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
sapply(df.type2$conf, function(x) tmp[which(levels(df.type2$conf) == x)])
tmp
seq(0, 1, length.out = length(unique(df.type2$conf)))
length(unique(df.type2$conf))
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf)+1))
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf))+1)
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
sapply(df.type2$conf, function(x) tmp[which(levels(df.type2$conf) == x)])
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf)))
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
tmp
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf))+1)
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
df.type2$confProp <- sapply(df.type2$conf, function(x) tmp[which(levels(df.type2$conf) == x)])
ggplot(df.type2, aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style +
theme(panel.spacing.x = unit(1, 'lines'))
df.type2
tmp <- trials[trials$isRepeat | trials$isRepeated, ]
df.type2 <- NULL
for(p in unique(trials$pid)) {
for(x in c(T, F)) {
ts <- tmp[tmp$isRepeat == x & pid == p, c('initialCorrect', 'initialConfidence')]
ts <- ts[!is.na(ts$initialConfidence) & !is.na(ts$initialCorrect), ]
roc <- type2ROC(ts[ ,1], ts[ ,2], bins = 7)
df.type2 <- rbind(df.type2, data.frame(pid = factor(p), isRep = !x, conf = roc$x, pCorrect = roc$y))
}
}
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf))+1)
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
df.type2$confProp <- sapply(df.type2$conf, function(x) tmp[which(levels(df.type2$conf) == x)])
tmp <- aggregate(pCorrect ~ conf + isRep, df.type2, mean)
# print neatly with rounding
tmp[ ,3] <- prop2str(tmp[ ,3])
kable(prop2str(tmp))
df.type2
p
ts <- tmp[tmp$isRepeat == x & pid == p, c('initialCorrect', 'initialConfidence')]
ts <- ts[!is.na(ts$initialConfidence) & !is.na(ts$initialCorrect), ]
x
tmp[tmp$isRepeat == x & pid == p, c('initialCorrect', 'initialConfidence')]
tmp$isRepeat == x & pid == p
tmp <- trials[trials$isRepeat | trials$isRepeated, ]
df.type2 <- NULL
for(p in unique(trials$pid)) {
for(x in c(T, F)) {
ts <- tmp[tmp$isRepeat == x & tmp$pid == p, c('initialCorrect', 'initialConfidence')]
ts <- ts[!is.na(ts$initialConfidence) & !is.na(ts$initialCorrect), ]
roc <- type2ROC(ts[ ,1], ts[ ,2], bins = 7)
df.type2 <- rbind(df.type2, data.frame(pid = factor(p), isRep = !x, conf = roc$x, pCorrect = roc$y))
}
}
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf))+1)
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
df.type2$confProp <- sapply(df.type2$conf, function(x) tmp[which(levels(df.type2$conf) == x)])
tmp <- aggregate(pCorrect ~ conf + isRep, df.type2, mean)
# print neatly with rounding
tmp[ ,3] <- prop2str(tmp[ ,3])
kable(prop2str(tmp))
ggplot(df.type2, aes(x = confProp, y = pCorrect, colour = pid)) +
geom_abline(slope = 1, intercept = c(0,0), linetype = 'dashed', colour = 'black') +
geom_point() +
geom_line(aes(group = pid)) +
facet_wrap(~isRep, labeller = label_both) +
scale_x_continuous(limits = c(0,1)) +
scale_y_continuous(limits = c(0,1)) +
coord_fixed() +
style +
theme(panel.spacing.x = unit(1, 'lines'))
tmp <- all.trials[all.trials$pid == 1]
tmp <- all.trials[all.trials$pid == 1, ]
tmp$practice
tmp$practice[48:55]
tmp$practice[44:45]
tmp$practice[58:62]
debrief$answer
debrief[ ,c('prompt', 'answer')]
debrief[order(debrief$prompt),c('prompt', 'answer')]
knitr::opts_chunk$set(echo = F)
startTime <- Sys.time()
source('src/ESM_core.R')
folderName <- "G:\\Documents\\University\\Google Drive\\Temp\\data\\processed"
results <- loadFilesFromFolder(folderName)
results <- removeParticipantIds(results)
# folderName <- 'ESM_sim.R'
# source('src/ESM_sim.R')
# results <- simulateAdvisorChoice(16, aPairs = list('agr' = c(7,8)), tTypes = c(trialTypes$dual, trialTypes$change))
# unpack results
for(i in 1:length(results))
assign(names(results)[i], results[i][[1]])
cat(paste('Loaded data from', folderName))
folderName <- "G:\\Documents\\University\\Google Drive\\Temp\\data\\processed"
results <- loadFilesFromFolder(folderName)
results <- removeParticipantIds(results)
# folderName <- 'ESM_sim.R'
# source('src/ESM_sim.R')
# results <- simulateAdvisorChoice(16, aPairs = list('agr' = c(7,8)), tTypes = c(trialTypes$dual, trialTypes$change))
# unpack results
for(i in 1:length(results))
assign(names(results)[i], results[i][[1]])
cat(paste('Loaded data from', folderName))
trials <- cbind(trials, trialUtilityVariables(results))
all.trials <- trials
trials <- trials[trials$practice == F, ]
cat('Generated utility variables')
participants$excluded <- sapply(participants$pid, function(pid){
ts <- all.trials[all.trials$pid == pid,]
# overall accuracy of initial decisions
m <- mean(ts$initialCorrect, na.rm = T)
if(m < .65 | m > .85) return('Accuracy')
# varied use of confidence scale
cCs <- aggregate(pid ~ confidenceCategory, data = ts, FUN = length)
# All confidence categories must be used
if(nrow(cCs) < 3) return ('Confident')
# All confidence categories must have at least 5% of the number of trials
if(any(cCs$pid < length(ts)*.05)) return('<5%')
return(F)
})
# exclude on the basis of collecting too much data
if(sum(participants$excluded == F) > 50) {
tmp <- participants[participants$excluded == F, c('id', 'timeStart')]
tmp <- tmp$id[order(tmp$timeStart)]
tmp <- tmp[1:50]
participants$excluded[!(participants$id %in% tmp)] <- 'Excess'
}
# Perform exclusions
participants <- participants[participants$excluded==F, ]
# Remove excluded participants' data from other data frames
all.trials <- all.trials[all.trials$pid %in% participants$pid, ]
trials <- trials[trials$pid %in% participants$pid, ]
advisors <- advisors[advisors$pid %in% participants$pid, ]
questionnaires <- questionnaires[questionnaires$pid %in% participants$pid, ]
genTrustQ <- genTrustQ[genTrustQ$pid %in% participants$pid, ]
tmp <- trials[trials$isRepeat | trials$isRepeated, ]
novel <- aggregate(initialCorrect ~ pid, data = tmp[!tmp$isRepeat, ], FUN = mean)
repeated <- aggregate(initialCorrect ~ pid, data = tmp[tmp$isRepeat, ], FUN = mean)
md.ttestBF(novel$initialCorrect, repeated$initialCorrect, labels = c('*M*|novel', '*M*|repeat'), paired = T)
tmp <- trials[trials$isRepeat | trials$isRepeated, ]
novel <- aggregate(initialCorrect ~ pid, data = tmp[!tmp$isRepeat, ], FUN = mean)
repeated <- aggregate(initialCorrect ~ pid, data = tmp[tmp$isRepeat, ], FUN = mean)
md.ttestBF(novel$initialCorrect, repeated$initialCorrect, labels = c('*M*|novel', '*M*|repeat'), paired = T)
tmp <- trials[trials$isRepeat | trials$isRepeated, ]
tmp$swapped <- sapply(1:nrow(tmp), function(i) {
if(!tmp$isRepeat[i]) return(F)
return(tmp$grid[i] != tmp$grid[tmp$id == tmp$stimulusParent[i] & tmp$pid == tmp$pid[i]])
})
tmp$delta <- sapply(1:nrow(tmp), function(i) {
if(!tmp$isRepeat[i]) return(NA)
x <- tmp$initialCorrect[tmp$id == tmp$stimulusParent[i] & tmp$pid == tmp$pid[i]]
tmp$initialCorrect[i] - x
})
data <- aggregate(delta ~ pid + swapped, data = tmp[tmp$isRepeat, ], FUN = mean)
md.ttestBF(data$delta[!data$swapped], data$delta[data$swapped], labels = c('*M*|same', '*M*|swapped'), paired = T)
tmp <- trials[trials$isRepeat | trials$isRepeated, ]
df.type2 <- NULL
for(p in unique(trials$pid)) {
for(x in c(T, F)) {
ts <- tmp[tmp$isRepeat == x & tmp$pid == p, c('initialCorrect', 'initialConfidence')]
ts <- ts[!is.na(ts$initialConfidence) & !is.na(ts$initialCorrect), ]
roc <- type2ROC(ts[ ,1], ts[ ,2], bins = 7)
df.type2 <- rbind(df.type2, data.frame(pid = factor(p), isRep = !x, conf = roc$x, pCorrect = roc$y))
}
}
tmp <- seq(0, 1, length.out = length(unique(df.type2$conf))+1)
tmp <- sapply(1:(length(tmp)-1), function(i) mean(c(tmp[i], tmp[i+1])))
df.type2$confProp <- sapply(df.type2$conf, function(x) tmp[which(levels(df.type2$conf) == x)])
tmp <- aggregate(pCorrect ~ conf + isRep, df.type2, mean)
# print neatly with rounding
tmp[ ,3] <- prop2str(tmp[ ,3])
kable(prop2str(tmp))
type2ROC(ts[ ,1], ts[ ,2], bins = 7)
ts
x
