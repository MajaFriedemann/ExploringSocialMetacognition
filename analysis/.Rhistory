testSet <- ts[ts$id %in% low:(i-1) & !is.nan(ts$initialConfidence), ]
# markers <- quantile(testSet$initialConfidence, c(.3,.7)) # nice approach, but not used in JS version
testSet <- testSet[order(testSet$initialConfidence),]
markers <- testSet$initialConfidence[c(ceiling(nrow(testSet)*.3), floor(nrow(testSet)*.7))]
trial$confidenceCategory <- sum(markers < trial$initialConfidence)
ts[ts$id == i, ] <- trial
}
# calculate confidence category proportions
ts <- ts[!ts$practice, ]
for(confCat in confidenceCategories) {
df.lags <- rbind(df.lags, data.frame(lag,
pid,
experiment = ts$experiment[1],
confCat,
prop = mean(ts$confidenceCategory==confCat, na.rm = T)))
}
setTxtProgressBar(pb, getTxtProgressBar(pb) + 1)
}
}
close(pb)
# plot results
ggplot(df.lags, aes(x = as.factor(lag), y = prop, colour = as.factor(confCat))) +
geom_hline(yintercept = .4, linetype = 'dashed') +
geom_hline(yintercept = .3, linetype = 'dashed') +
stat_summary(geom = 'point', fun.y = mean) +
stat_summary(geom = 'errorbar', fun.data = mean_cl_boot) +
facet_wrap(~experiment)
df.markers <- NULL
for(pid in unique(trials$pid)) {
ts <- trials[trials$pid == pid & ts$initialCorrect, ]
tmp <- c(NaN,NaN)
for(practice in c(T,F)) {
v <- ts$initialConfidence[ts$practice == practice]
v <- order(v)
tmp[as.numeric(practice)+1] <- data.frame(low = v[round(length(v) * .3)],
high = v[round(length(v) * .7)])
}
for(marker in c(1,2)) {
name <- c('low', 'high')[marker]
rbind(df.markers, data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = tmp[marker][name],
real = tmp[marker][name]))
}
}
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none')
rbind(df.markers, data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = tmp[marker][name],
real = tmp[marker][name]))
pid
ts$experiment[1]
tmp
v
practice
as.numeric(practice)+1
tmp
df.markers <- NULL
for(pid in unique(trials$pid)) {
ts <- trials[trials$pid == pid & ts$initialCorrect, ]
tmp <- list()
for(practice in c(T,F)) {
v <- ts$initialConfidence[ts$practice == practice]
v <- order(v)
tmp[[as.numeric(practice)+1]] <- data.frame(low = v[round(length(v) * .3)],
high = v[round(length(v) * .7)])
}
for(marker in c(1,2)) {
name <- c('low', 'high')[marker]
rbind(df.markers, data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = tmp[marker][name],
real = tmp[marker][name]))
}
}
tmp
v
v <- ts$initialConfidence[ts$practice == practice]
v <- v[order(v)]
v
tmp[[as.numeric(practice)+1]] <- data.frame(low = v[round(length(v) * .3)],
high = v[round(length(v) * .7)])
tmp
practice <- T
v <- ts$initialConfidence[ts$practice == practice]
v <- v[order(v)]
tmp[[as.numeric(practice)+1]] <- data.frame(low = v[round(length(v) * .3)],
high = v[round(length(v) * .7)])
tmp
as.numeric(practice)+1
data.frame(low = v[round(length(v) * .3)],
high = v[round(length(v) * .7)])
v
ts
ts$initialConfidence
ts$practice
df.markers <- NULL
for(pid in unique(trials$pid)) {
ts <- all.trials[all.trials$pid == pid & all.trials$initialCorrect, ]
tmp <- list()
for(practice in c(T,F)) {
v <- ts$initialConfidence[ts$practice == practice]
v <- v[order(v)]
tmp[[as.numeric(practice)+1]] <- data.frame(low = v[round(length(v) * .3)],
high = v[round(length(v) * .7)])
}
for(marker in c(1,2)) {
name <- c('low', 'high')[marker]
rbind(df.markers, data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = tmp[marker][name],
real = tmp[marker][name]))
}
}
tmp
ts$experiment[1]
name
tmp[marker][name]
tmp[[marker]][name]
df.markers <- NULL
for(pid in unique(trials$pid)) {
ts <- all.trials[all.trials$pid == pid & all.trials$initialCorrect, ]
tmp <- list()
for(practice in c(T,F)) {
v <- ts$initialConfidence[ts$practice == practice]
v <- v[order(v)]
tmp[[as.numeric(practice)+1]] <- data.frame(low = v[round(length(v) * .3)],
high = v[round(length(v) * .7)])
}
for(marker in c(1,2)) {
name <- c('low', 'high')[marker]
rbind(df.markers, data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = tmp[[marker]][name],
real = tmp[[marker]][name]))
}
}
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none')
df.markers
data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = tmp[[marker]][name],
real = tmp[[marker]][name])
df.markers <- NULL
for(pid in unique(trials$pid)) {
ts <- all.trials[all.trials$pid == pid & all.trials$initialCorrect, ]
tmp <- list()
for(practice in c(T,F)) {
v <- ts$initialConfidence[ts$practice == practice]
v <- v[order(v)]
tmp[[as.numeric(practice)+1]] <- data.frame(low = v[round(length(v) * .3)],
high = v[round(length(v) * .7)])
}
for(marker in c(1,2)) {
name <- c('low', 'high')[marker]
rbind(df.markers, data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = tmp[[marker]][name],
real = tmp[[marker]][name]))
}
}
df.markers
#' Looking at the relationship between the lower and upper confidence boundaries
#' for practice vs real trials. Ideally these should be the same.
df.markers <- NULL
for(pid in unique(trials$pid)) {
ts <- all.trials[all.trials$pid == pid & all.trials$initialCorrect, ]
tmp <- list()
for(practice in c(T,F)) {
v <- ts$initialConfidence[ts$practice == practice]
v <- v[order(v)]
tmp[[as.numeric(practice)+1]] <- data.frame(low = v[round(length(v) * .3)],
high = v[round(length(v) * .7)])
}
for(marker in c(1,2)) {
name <- c('low', 'high')[marker]
df.markers <- rbind(df.markers, data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = tmp[[marker]][name],
real = tmp[[marker]][name]))
}
}
#' Looking at the relationship between the lower and upper confidence boundaries
#' for practice vs real trials. Ideally these should be the same.
df.markers <- NULL
for(pid in unique(trials$pid)) {
ts <- all.trials[all.trials$pid == pid & all.trials$initialCorrect, ]
tmp <- list()
for(practice in c(T,F)) {
v <- ts$initialConfidence[ts$practice == practice]
v <- v[order(v)]
tmp[[as.numeric(practice)+1]] <- data.frame(low = v[round(length(v) * .3)],
high = v[round(length(v) * .7)])
}
for(marker in c(1,2)) {
name <- c('low', 'high')[marker]
df.markers <- rbind(df.markers, data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = tmp[[marker]][name],
real = tmp[[marker]][name]))
}
}
df.markers
data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = tmp[[marker]][name],
real = tmp[[marker]][name])
data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = as.numeric(tmp[[marker]][name]),
real = tmp[[marker]][name])
data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = as.numeric(tmp[[marker]][name]),
real = as.numeric(tmp[[marker]][name]))
df.markers <- NULL
for(pid in unique(trials$pid)) {
ts <- all.trials[all.trials$pid == pid & all.trials$initialCorrect, ]
tmp <- list()
for(practice in c(T,F)) {
v <- ts$initialConfidence[ts$practice == practice]
v <- v[order(v)]
tmp[[as.numeric(practice)+1]] <- data.frame(low = v[round(length(v) * .3)],
high = v[round(length(v) * .7)])
}
for(marker in c(1,2)) {
name <- c('low', 'high')[marker]
df.markers <- rbind(df.markers, data.frame(pid,
experiment = ts$experiment[1],
marker = name,
practice = as.numeric(tmp[[marker]][name]),
real = as.numeric(tmp[[marker]][name])))
}
}
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none')
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
v
length(v) * .3
length(v) * .7
(1:50)[round(50*.3)]
(1:50)[round(50*.7)]
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_point(inherit.aes = F, x = 15, y = 15, size = 3) +
geom_point(inherit.aes = F, x = 35, y = 35, size = 3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_point(inherit.aes = F, x = 15, y = 15, size = 3, shape = 1) +
geom_point(inherit.aes = F, x = 35, y = 35, size = 3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_point(inherit.aes = F, x = 15, y = 15, size = 3, shape = 2) +
geom_point(inherit.aes = F, x = 35, y = 35, size = 3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_point(inherit.aes = F, x = 15, y = 15, size = 3, shape = 3) +
geom_point(inherit.aes = F, x = 35, y = 35, size = 3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_point(inherit.aes = F, x = 15, y = 15, size = 3, shape = 4) +
geom_point(inherit.aes = F, x = 35, y = 35, size = 3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_point(inherit.aes = F, x = 15, y = 15, size = 3) +
geom_point(inherit.aes = F, x = 35, y = 35, size = 3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_point(inherit.aes = F, x = 15, y = 15, size = 3, data = data.frame(marker = 'low')) +
geom_point(inherit.aes = F, x = 35, y = 35, size = 3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_point(inherit.aes = F, x = 15, y = 15, size = 3, data = data.frame(marker = 'low')) +
geom_point(inherit.aes = F, x = 35, y = 35, size = 3, data = data.frame(marker = 'high')) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_point(inherit.aes = F, x = 15, y = 15, size = 3, data = data.frame(marker = 'low')) +
geom_point(inherit.aes = F, x = 35, y = 35, size = 3, data = data.frame(marker = 'high')) +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low')) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_point(inherit.aes = F, x = 15, y = 15, size = 3, data = data.frame(marker = 'low')) +
geom_point(inherit.aes = F, x = 35, y = 35, size = 3, data = data.frame(marker = 'high')) +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low'),
fill = 'lightblue', alpha = .3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_point(inherit.aes = F, x = 15, y = 15, size = 3, data = data.frame(marker = 'low')) +
geom_point(inherit.aes = F, x = 35, y = 35, size = 3, data = data.frame(marker = 'high')) +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low'),
fill = 'lightblue', alpha = .3) +
geom_rect(inherit.aes = F, xmin = 35, ymin = 35, xmax = 50, ymax = 50, data = data.frame(marker = 'high'),
fill = 'lightred', alpha = .3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low'),
fill = 'lightblue', alpha = .3) +
geom_rect(inherit.aes = F, xmin = 35, ymin = 35, xmax = 50, ymax = 50, data = data.frame(marker = 'high'),
fill = 'pink', alpha = .3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low'),
fill = 'lightblue', alpha = .3) +
geom_rect(inherit.aes = F, xmin = 35, ymin = 35,  data = data.frame(marker = 'high'),
fill = 'pink', alpha = .3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal()
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low'),
fill = 'lightblue', alpha = .3) +
geom_rect(inherit.aes = F, xmin = 35, ymin = 35, xmax = 50, ymax = 50, data = data.frame(marker = 'high'),
fill = 'pink', alpha = .3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none') +
coord_equal() +
scale_x_continuous(limits = c(0,50), expand = c(0,0)) +
scale_y_continuous(limits = c(0,50), expand = c(0,0))
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low'),
fill = 'lightblue', alpha = .3) +
geom_rect(inherit.aes = F, xmin = 35, ymin = 35, xmax = 50, ymax = 50, data = data.frame(marker = 'high'),
fill = 'pink', alpha = .3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none',
panel.spacing = 2) +
coord_equal() +
scale_x_continuous(limits = c(0,50), expand = c(0,0)) +
scale_y_continuous(limits = c(0,50), expand = c(0,0))
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low'),
fill = 'lightblue', alpha = .3) +
geom_rect(inherit.aes = F, xmin = 35, ymin = 35, xmax = 50, ymax = 50, data = data.frame(marker = 'high'),
fill = 'pink', alpha = .3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none',
panel.spacing = unit(2, 'lines')) +
coord_equal() +
scale_x_continuous(limits = c(0,50), expand = c(0,0)) +
scale_y_continuous(limits = c(0,50), expand = c(0,0))
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low'),
fill = 'lightblue', alpha = .3) +
geom_rect(inherit.aes = F, xmin = 35, ymin = 35, xmax = 50, ymax = 50, data = data.frame(marker = 'high'),
fill = 'pink', alpha = .3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none',
panel.spacing = unit(1, 'lines')) +
coord_equal() +
scale_x_continuous(limits = c(0,50), expand = c(0,0)) +
scale_y_continuous(limits = c(0,50), expand = c(0,0))
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low'),
fill = 'lightblue', alpha = .3) +
geom_rect(inherit.aes = F, xmin = 35, ymin = 35, xmax = 50, ymax = 50, data = data.frame(marker = 'high'),
fill = 'pink', alpha = .3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none',
panel.spacing = unit(.5, 'lines')) +
coord_equal() +
scale_x_continuous(limits = c(0,50), expand = c(0,0)) +
scale_y_continuous(limits = c(0,50), expand = c(0,0))
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low'),
fill = 'lightblue', alpha = .3) +
geom_rect(inherit.aes = F, xmin = 35, ymin = 35, xmax = 50, ymax = 50, data = data.frame(marker = 'high'),
fill = 'pink', alpha = .3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none',
panel.spacing = unit(.75, 'lines')) +
coord_equal() +
scale_x_continuous(limits = c(0,50), expand = c(0,0)) +
scale_y_continuous(limits = c(0,50), expand = c(0,0))
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low'),
fill = 'lightblue', alpha = .3) +
geom_rect(inherit.aes = F, xmin = 35, ymin = 35, xmax = 50, ymax = 50, data = data.frame(marker = 'high'),
fill = 'pink', alpha = .3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none',
panel.spacing = unit(1, 'lines')) +
coord_equal() +
scale_x_continuous(limits = c(0,50), expand = c(0,0)) +
scale_y_continuous(limits = c(0,50), expand = c(0,0))
ggplot(df.markers, aes(x = practice, y = real, colour = pid)) +
geom_abline(slope = 1, linetype = 'dashed') +
geom_rect(inherit.aes = F, xmin = 0, ymin = 0, xmax = 15, ymax = 15, data = data.frame(marker = 'low'),
fill = 'lightblue', alpha = .3) +
geom_rect(inherit.aes = F, xmin = 35, ymin = 35, xmax = 50, ymax = 50, data = data.frame(marker = 'high'),
fill = 'pink', alpha = .3) +
geom_point(alpha = 0.3) +
facet_grid(marker ~ experiment) +
theme_light() +
theme(legend.position = 'none',
panel.spacing = unit(1, 'lines')) +
coord_equal() +
scale_x_continuous(limits = c(0,50), expand = c(0,0)) +
scale_y_continuous(limits = c(0,50), expand = c(0,0)) +
labs(title = 'Confidence Thresholds',
subtitle = 'Each dot is a participant\'s low/high threshold\nBoxes show idealised low/high confidence areas of the scales.')
