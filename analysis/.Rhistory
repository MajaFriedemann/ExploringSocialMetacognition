# histogram
tmp$WoA_f <- cut(tmp$WoA, 10)
ggplot(tmp, aes(WoA_f, fill = advisorAgrees)) +
geom_histogram(bins = 100, aes(y = ..ncount..), position = "dodge") +
facet_wrap(~advisorAgrees, labeller = label_both) +
style.long +
labs(title = 'Data from all participants',
subtitle = paste('Participants =', length(unique(tmp$pid)),
'Trials =', nrow(tmp)))
ggplot(tmp, aes(WoA_f, fill = advisorAgrees)) +
geom_histogram(position = "dodge") +
facet_wrap(~advisorAgrees, labeller = label_both) +
style.long +
labs(title = 'Data from all participants',
subtitle = paste('Participants =', length(unique(tmp$pid)),
'Trials =', nrow(tmp)))
hist(tmp$WoA_f)
unique(tmp$WoA_f)
ggplot(tmp, aes(WoA_f, fill = advisorAgrees)) +
geom_histogram(stat = "count", position = "dodge") +
facet_wrap(~advisorAgrees, labeller = label_both) +
style.long +
labs(title = 'Data from all participants',
subtitle = paste('Participants =', length(unique(tmp$pid)),
'Trials =', nrow(tmp)))
ggplot(tmp, aes(WoA_f, fill = advisorAgrees)) +
geom_histogram(stat = "count", position = "dodge") +
# facet_wrap(~advisorAgrees, labeller = label_both) +
style.long +
labs(title = 'Data from all participants',
subtitle = paste('Participants =', length(unique(tmp$pid)),
'Trials =', nrow(tmp)))
min(tmp$WoA)
max(tmp$WoA)
ggplot(tmp, aes(WoA_f, fill = advisorAgrees)) +
geom_histogram(stat = "count", position = "dodge") +
# facet_wrap(~advisorAgrees, labeller = label_both) +
style.long +
labs(title = 'Data from all participants',
subtitle = paste('Participants =', length(unique(tmp$pid)),
'Trials =', nrow(tmp))) +
theme(legend.position = 'top')
set.seed(10241024)
makeAgents <- function(n) {
agents <- data.frame(
id = 1:n,
ability = rnorm(n),
benevolence.a1 = rnorm(n),
benevolence.a2 = rnorm(n),
genTrust = rnorm(n)
)
for (a in c('a1', 'a2')) {
for (vName in c('ability', 'integrity')) {
b <- paste0('benevolence.', a)
v <- paste0(vName, '.', a)
agents[, v] <- rnorm(n) + 0.3 * agents[, b]
}
}
agents$genTakeAdvice <- rnorm(n) + 0.3 * agents$genTrust
agents
}
set.seed(10241024)
nAgents <- 100
nTrials <- 10
agents <- makeAgents(nAgents)
trials <- data.frame(
id = 1:(nAgents * nTrials),
agentId = rep(agents$id, each = nTrials),
initialResponse = rnorm(nAgents * nTrials,
sd = rep(agents$ability, each = nTrials))
)
rep(agents$ability, each = nTrials)
length(rep(agents$ability, each = nTrials))
round(rep(agents$ability, each = nTrials), 1)[1:100]
trials <- data.frame(
id = 1:(nAgents * nTrials),
agentId = rep(agents$id, each = nTrials),
initialResponse = rnorm(nAgents * nTrials,
mean = rep(agents$ability, each = nTrials),
sd = rep(abs(agents$ability), each = nTrials))
)
head(trials)
library(tidyverse)
library(tidyverse)
makeAgents <- function(n) {
agents <- tibble(
id = 1:n,
ability = rnorm(n),
benevolence.a1 = rnorm(n),
benevolence.a2 = rnorm(n),
genTrust = rnorm(n)
)
for (a in c('a1', 'a2')) {
for (vName in c('ability', 'integrity')) {
b <- paste0('benevolence.', a)
v <- paste0(vName, '.', a)
agents[, v] <- rnorm(n) + 0.3 * agents[, b]
}
}
agents$genTakeAdvice <- rnorm(n) + 0.3 * agents$genTrust
agents
}
set.seed(10241024)
nAgents <- 100
nTrials <- 10
agents <- makeAgents(nAgents)
agents
trials <- tibble(
id = 1:(nAgents * nTrials),
agentId = rep(agents$id, each = nTrials),
initialResponse = rnorm(nAgents * nTrials,
mean = rep(agents$ability, each = nTrials),
sd = rep(abs(agents$ability), each = nTrials))
)
trials
trials[agentId]
trials['agentId']
trials[['agentId']]
trials <- tibble(
id = 1:(nAgents * nTrials),
agentId = rep(agents$id, each = nTrials),
initialDecision = rnorm(nAgents * nTrials,
mean = rep(agents$ability, each = nTrials),
sd = rep(abs(agents$ability), each = nTrials))
)
makeAgents <- function(n) {
agents <- tibble(
id = 1:n,
ability = rnorm(n),
benevolence.a1 = rnorm(n),
benevolence.a2 = rnorm(n),
genTrust = rnorm(n)
)
for (a in c('a1', 'a2')) {
for (vName in c('ability', 'integrity')) {
b <- paste0('benevolence.', a)
v <- paste0(vName, '.', a)
agents[, v] <- rnorm(n) + 0.3 * agents[, b]
}
}
agents$genTakeAdvice <- rnorm(n) + 0.3 * agents$genTrust
agents
}
set.seed(10241024)
nAgents <- 100
nTrials <- 10
agents <- makeAgents(nAgents)
trials <- tibble(
id = 1:(nAgents * nTrials),
agentId = rep(agents$id, each = nTrials),
initialDecision = rnorm(nAgents * nTrials,
mean = rep(agents$ability, each = nTrials),
sd = rep(abs(agents$ability), each = nTrials))
)
agents$sameGroup.a1 <- runif(nAgents) > .5
agents$sameGroup.a2 <- !agents$sameGroup.a1
groupBonus <- 0.5
m <- agents$sameGroup.a1
agents$benevolence.a1[m] <- agents$benevolence.a1[m] + groupBonus
agents$benevolence.a2[!m] <- agents$benevolence.a2[!m] + groupBonus
trials$advisor <- ifelse(runif(nrow(trials)) < .5, 1, 2)
agents$sameGroup.a1 <- runif(nAgents) > .5
agents$sameGroup.a2 <- !agents$sameGroup.a1
groupBonus <- 0.5
m <- agents$sameGroup.a1
agents$benevolence.a1[m] <- agents$benevolence.a1[m] + groupBonus
agents$benevolence.a2[!m] <- agents$benevolence.a2[!m] + groupBonus
warnings()
agents$sameGroup.a1 <- runif(nAgents) > .5
agents$sameGroup.a2 <- !agents$sameGroup.a1
groupBonus <- 0.5
m <- agents$sameGroup.a1
agents$benevolence.a1[m] <- agents$benevolence.a1[m] + groupBonus
agents$benevolence.a2[!m] <- agents$benevolence.a2[!m] + groupBonus
agents
trials$advisor <- ifelse(runif(nrow(trials)) < .5, 1, 2)
trials
trials$advice <- runif(nrow(trials))
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
trials$ability.a <- sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(v, ".", triasl$advisor[i])]
)
}
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
trials$ability.a <- sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(v, ".", trials$advisor[i])]
)
}
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
trials$ability.a <- sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(v, ".a", trials$advisor[i])]
)
}
trials
trials
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
trials[paste0(v, ".a")] <- sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(v, ".a", trials$advisor[i])]
)
}
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
trials[, paste0(v, ".a")] <- sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(v, ".a", trials$advisor[i])]
)
}
trials
sample(trials, 10)
trials[sample(nrow(trials), 10)]
trials[sample(nrow(trials), 10), ]
i
v
agents[agents$id == trials$agentId[i], paste0(v, ".a", trials$advisor[i])]
agents[agents$id == trials$agentId[22], paste0(v, ".a", trials$advisor[22])]
trials[, paste0(v, ".a")]
trials$integrity.a
trials[, "integrity.a"]
trials[, paste0("integrity", ".a")]
trials[, paste0(v, ".a")]
trials[, paste0(v, ".a")]
trials <- tibble(
id = 1:(nAgents * nTrials),
agentId = rep(agents$id, each = nTrials),
initialDecision = rnorm(nAgents * nTrials,
mean = rep(agents$ability, each = nTrials),
sd = rep(abs(agents$ability), each = nTrials))
)
trials$advisor <- ifelse(runif(nrow(trials)) < .5, 1, 2)
trials$advice <- runif(nrow(trials))
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
trials[, paste0(v, ".a")] <- sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(v, ".a", trials$advisor[i])]
)
}
trials$genTakeAdvice <- agents$genTakeAdvice[agents$id == trials$agentId]
# final decision = initial decision + adviceTaking * advice
# adviceTaking = general + advisor beliefs + error
m <- trials$advisor == 1
trials$finalDecision[m] <-
trials$initialDecision[m] +
(agents$genTakeAdvice + agents)
trials <- tibble(
id = 1:(nAgents * nTrials),
agentId = rep(agents$id, each = nTrials),
initialDecision = rnorm(nAgents * nTrials,
mean = rep(agents$ability, each = nTrials),
sd = rep(abs(agents$ability), each = nTrials))
)
trials$advisor <- ifelse(runif(nrow(trials)) < .5, 1, 2)
trials$advice <- runif(nrow(trials))
trials[, paste0(v, ".a")]
sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(v, ".a", trials$advisor[i])]
)
sapply(1:nrow(trials), function(i)
agents[[agents$id == trials$agentId[i], paste0(v, ".a", trials$advisor[i])]]
)
agents[agents$id == trials$agentId[i], paste0(v, ".a", trials$advisor[i])]
paste0(v, ".a", trials$advisor[i])
agents[agents$id == trials$agentId[i], paste0(v, ".a", trials$advisor[i])]
trials$agentId[i]
paste0(v, ".a", trials$advisor[i])
agents[agents$id == trials$agentId[i], paste0(v, ".a", trials$advisor[i])]
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
V <- paste0(v, ".a")
trials[, V] <- sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(V, trials$advisor[i])]
)
}
makeAgents <- function(n) {
agents <- tibble(
id = 1:n,
ability = rnorm(n),
benevolence.a1 = rnorm(n),
benevolence.a2 = rnorm(n),
genTrust = rnorm(n)
)
for (a in c('a1', 'a2')) {
for (vName in c('ability', 'integrity')) {
b <- paste0('benevolence.', a)
v <- paste0(vName, '.', a)
agents[, v] <- rnorm(n) + 0.3 * agents[, b]
}
}
agents$genTakeAdvice <- rnorm(n) + 0.3 * agents$genTrust
agents
}
set.seed(10241024)
nAgents <- 100
nTrials <- 10
agents <- makeAgents(nAgents)
trials <- tibble(
id = 1:(nAgents * nTrials),
agentId = rep(agents$id, each = nTrials),
initialDecision = rnorm(nAgents * nTrials,
mean = rep(agents$ability, each = nTrials),
sd = rep(abs(agents$ability), each = nTrials))
)
agents$sameGroup.a1 <- runif(nAgents) > .5
agents$sameGroup.a2 <- !agents$sameGroup.a1
groupBonus <- 0.5
m <- agents$sameGroup.a1
agents$benevolence.a1[m] <- agents$benevolence.a1[m] + groupBonus
agents$benevolence.a2[!m] <- agents$benevolence.a2[!m] + groupBonus
trials$advisor <- ifelse(runif(nrow(trials)) < .5, 1, 2)
trials$advice <- runif(nrow(trials))
trials
v
i
V <- paste0(v, ".a")
V
agents[agents$id == trials$agentId[i], paste0(V, trials$advisor[i])]
trials$advisor[i]
paste0(V, trials$advisor[i])
trials$agentId[i]
agents[agents$id == trials$agentId[i], ]
agents[agents$id == trials$agentId[i], "integrity.a2"]
agents[agents$id == trials$agentId[i], paste0(V, trials$advisor[i])]
sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(V, trials$advisor[i])]
)
trials[, V] <- sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(V, trials$advisor[i])]
)
trials[, "foobar"] <- sapply(1:nrow(trials), function(i) i)
trials
V <- paste0(v, ".a")
trials[, V] <- NA
trials[, V] <- sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(V, trials$advisor[i])]
)
?quo_name
?:=
trials[, V]
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
V <- paste0(v, ".a")
trials[, V] <- NA
trials[, V] <- unlist(sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(V, trials$advisor[i])]
))
}
trials
trials <- tibble(
id = 1:(nAgents * nTrials),
agentId = rep(agents$id, each = nTrials),
initialDecision = rnorm(nAgents * nTrials,
mean = rep(agents$ability, each = nTrials),
sd = rep(abs(agents$ability), each = nTrials))
)
trials$advisor <- ifelse(runif(nrow(trials)) < .5, 1, 2)
trials$advice <- runif(nrow(trials))
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
V <- paste0(v, ".a")
trials[, V] <- NA
trials[, V] <- unlist(sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(V, trials$advisor[i])]
))
}
trials$genTakeAdvice <- agents$genTakeAdvice[agents$id == trials$agentId]
# final decision = initial decision + adviceTaking * advice
# adviceTaking = general + advisor beliefs + error
m <- trials$advisor == 1
trials$finalDecision[m] <-
trials$initialDecision[m] +
(agents$genTakeAdvice + agents)
trials
unique(trials$benevolence.a)
trials
trials$finalDecision
trials$advisor <- ifelse(runif(nrow(trials)) < .5, 1, 2)
trials$advice <- runif(nrow(trials))
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
V <- paste0(v, ".a")
trials[, V] <- NA
trials[, V] <- unlist(sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(V, trials$advisor[i])]
))
}
trials$genTakeAdvice <- agents$genTakeAdvice[agents$id == trials$agentId]
# final decision = initial decision + adviceTaking * advice
# adviceTaking = general + advisor beliefs + error
m <- trials$advisor == 1
trials$finalDecision[m] <-
trials$initialDecision[m] +
(trials$genTakeAdvice + (trials$ability.a +
trials$integrity.a +
trials$benevolence.a) / 3) *
trials$advice
trials$finalDecision
trials$advice
trials$initialDecision +
(trials$genTakeAdvice + (trials$ability.a +
trials$integrity.a +
trials$benevolence.a) / 3) *
trials$advice
trials$advisor <- ifelse(runif(nrow(trials)) < .5, 1, 2)
trials$advice <- runif(nrow(trials))
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
V <- paste0(v, ".a")
trials[, V] <- NA
trials[, V] <- unlist(sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(V, trials$advisor[i])]
))
}
trials$genTakeAdvice <- agents$genTakeAdvice[agents$id == trials$agentId]
# final decision = initial decision + adviceTaking * advice
# adviceTaking = general + advisor beliefs
trials$finalDecision <-
trials$initialDecision +
(trials$genTakeAdvice + (trials$ability.a +
trials$integrity.a +
trials$benevolence.a) / 3) *
trials$advice
trials
trials[tail(names(trials))]
agents$genTakeAdvice[agents$id == trials$agentId]
agents$genTakeAdvice
agents$id == trials$agentId
agents$genTakeAdvice[trials$agentId]
trials$advisor <- ifelse(runif(nrow(trials)) < .5, 1, 2)
trials$advice <- runif(nrow(trials))
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
V <- paste0(v, ".a")
trials[, V] <- NA
trials[, V] <- unlist(sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(V, trials$advisor[i])]
))
}
trials$genTakeAdvice <- agents$genTakeAdvice[trials$agentId]
# final decision = initial decision + adviceTaking * advice
# adviceTaking = general + advisor beliefs
trials$finalDecision <-
trials$initialDecision +
(trials$genTakeAdvice + (trials$ability.a +
trials$integrity.a +
trials$benevolence.a) / 3) *
trials$advice
trials(tail(names(trials)))
trials[tail(names(trials))]
trials[sample(nrow(trials), 10), tail(names(trials))]
load("G:/Documents/University/Programming/EvoEgoBias/results/2019-03-27_13-51-13_Pick-or-Weighted-Average-(Linked) with bad advice_rawdata-subset.Rdata")
rm('resultsPath', 'allAgents')
library(tidyverse)
makeAgents <- function(n) {
agents <- tibble(
id = 1:n,
ability = rnorm(n),
benevolence.a1 = rnorm(n),
benevolence.a2 = rnorm(n),
genTrust = rnorm(n)
)
for (a in c('a1', 'a2')) {
for (vName in c('ability', 'integrity')) {
b <- paste0('benevolence.', a)
v <- paste0(vName, '.', a)
agents[, v] <- rnorm(n) + 0.3 * agents[, b]
}
}
agents$genTakeAdvice <- rnorm(n) + 0.3 * agents$genTrust
agents
}
set.seed(10241024)
nAgents <- 100
nTrials <- 10
agents <- makeAgents(nAgents)
trials <- tibble(
id = 1:(nAgents * nTrials),
agentId = rep(agents$id, each = nTrials),
initialDecision = rnorm(nAgents * nTrials,
mean = rep(agents$ability, each = nTrials),
sd = rep(abs(agents$ability), each = nTrials))
)
agents$sameGroup.a1 <- runif(nAgents) > .5
agents$sameGroup.a2 <- !agents$sameGroup.a1
groupBonus <- 0.5
m <- agents$sameGroup.a1
agents$benevolence.a1[m] <- agents$benevolence.a1[m] + groupBonus
agents$benevolence.a2[!m] <- agents$benevolence.a2[!m] + groupBonus
trials$advisor <- ifelse(runif(nrow(trials)) < .5, 1, 2)
trials$advice <- runif(nrow(trials))
# throw some agents variables into trials for convenience
for (v in c('ability', 'benevolence', 'integrity')) {
V <- paste0(v, ".a")
trials[, V] <- NA
trials[, V] <- unlist(sapply(1:nrow(trials), function(i)
agents[agents$id == trials$agentId[i], paste0(V, trials$advisor[i])]
))
}
trials$genTakeAdvice <- agents$genTakeAdvice[trials$agentId]
# final decision = initial decision + adviceTaking * advice
# adviceTaking = general + advisor beliefs
trials$finalDecision <-
trials$initialDecision +
(trials$genTakeAdvice + (trials$ability.a +
trials$integrity.a +
trials$benevolence.a) / 3) *
trials$advice
trials
trials[tail(names(trials))]
trials[21:30, tail(names(trials))]
trials[25:34, tail(names(trials))]
