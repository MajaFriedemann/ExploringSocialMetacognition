alpha = .05, color = NA) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
annotate(geom = "rect", aes(ymin = qTarget - 5, ymax = qTarget + 5,
xmin = 0, xmax = 2, fill = "correct +/- 5"),
alpha = .05, color = NA) +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
geom_rect(aes(ymin = qTarget - 1, ymax = qTarget + 1,
xmin = 0, xmax = 2, fill = "correct +/- 1"),
alpha = .05, color = NA) +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
geom_rect(aes(ymin = qTarget - 1, ymax = qTarget + 1,
xmin = 0, xmax = 2, fill = "correct +/- 1"),
alpha = .05, color = NA) +
geom_rect(aes(ymin = qTarget - 4, ymax = qTarget + 4,
xmin = 0, xmax = 2, fill = "correct +/- 4"),
alpha = .05, color = NA) +
geom_rect(aes(ymin = qTarget - 13, ymax = qTarget + 13,
xmin = 0, xmax = 2, fill = "correct +/- 13"),
alpha = .05, color = NA) +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
geom_rect(aes(ymin = qTarget - 13, ymax = qTarget + 13,
xmin = 0, xmax = 2, fill = "correct +/- 13"),
alpha = .05, color = NA) +
geom_rect(aes(ymin = qTarget - 4, ymax = qTarget + 4,
xmin = 0, xmax = 2, fill = "correct +/- 4"),
alpha = .05, color = NA) +
geom_rect(aes(ymin = qTarget - 1, ymax = qTarget + 1,
xmin = 0, xmax = 2, fill = "correct +/- 1"),
alpha = .05, color = NA) +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
geom_rect(aes(ymin = qTarget - 13, ymax = qTarget + 13,
xmin = 0, xmax = 2, fill = "correct +/- 13"),
alpha = .025, color = NA) +
geom_rect(aes(ymin = qTarget - 4, ymax = qTarget + 4,
xmin = 0, xmax = 2, fill = "correct +/- 4"),
alpha = .05, color = NA) +
geom_rect(aes(ymin = qTarget - 1, ymax = qTarget + 1,
xmin = 0, xmax = 2, fill = "correct +/- 1"),
alpha = .075, color = NA) +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
# geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
geom_rect(aes(ymin = qTarget - 13, ymax = qTarget + 13,
xmin = 0, xmax = 2, fill = "correct +/- 13"),
alpha = .025, color = NA) +
geom_rect(aes(ymin = qTarget - 4, ymax = qTarget + 4,
xmin = 0, xmax = 2, fill = "correct +/- 4"),
alpha = .05, color = NA) +
geom_rect(aes(ymin = qTarget - 1, ymax = qTarget + 1,
xmin = 0, xmax = 2, fill = "correct +/- 1"),
alpha = .075, color = NA) +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
s <- 1
q
q <- qs[i:(i + s - 1)]
q
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
# geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
geom_rect(aes(ymin = qTarget - 13, ymax = qTarget + 13,
xmin = 0, xmax = 2, fill = "correct +/- 13"),
alpha = .033, color = NA) +
geom_rect(aes(ymin = qTarget - 4, ymax = qTarget + 4,
xmin = 0, xmax = 2, fill = "correct +/- 4"),
alpha = .067, color = NA) +
geom_rect(aes(ymin = qTarget - 1, ymax = qTarget + 1,
xmin = 0, xmax = 2, fill = "correct +/- 1"),
alpha = .1, color = NA) +
coord_flip() +
library(ggplot2)
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
# geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
geom_rect(aes(ymin = qTarget - 13, ymax = qTarget + 13,
xmin = 0, xmax = 2, fill = "correct +/- 13"),
alpha = .033, color = NA) +
geom_rect(aes(ymin = qTarget - 4, ymax = qTarget + 4,
xmin = 0, xmax = 2, fill = "correct +/- 4"),
alpha = .067, color = NA) +
geom_rect(aes(ymin = qTarget - 1, ymax = qTarget + 1,
xmin = 0, xmax = 2, fill = "correct +/- 1"),
alpha = .1, color = NA) +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
pallete()
tmp.gg <- ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_hline(aes(yintercept = tmp$qTarget - 13, linetype = "+/-13")) +
geom_hline(aes(yintercept = tmp$qTarget + 13, linetype = "+/-13")) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
scale_fill_manual(values = )
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_hline(aes(yintercept = tmp$qTarget - 13, linetype = "+/-13")) +
geom_hline(aes(yintercept = tmp$qTarget + 13, linetype = "+/-13")) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
scale_fill_manual(values = )
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_hline(aes(yintercept = tmp$qTarget - 13, linetype = "+/-13")) +
geom_hline(aes(yintercept = tmp$qTarget + 13, linetype = "+/-13")) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_hline(aes(yintercept = tmp$qTarget - 13, linetype = "+/-13")) +
geom_hline(aes(yintercept = tmp$qTarget + 13, linetype = "+/-13")) +
geom_hline(aes(yintercept = tmp$qTarget - 4, linetype = "+/-4")) +
geom_hline(aes(yintercept = tmp$qTarget + 4, linetype = "+/-4")) +
geom_hline(aes(yintercept = tmp$qTarget - 1, linetype = "+/-1")) +
geom_hline(aes(yintercept = tmp$qTarget + 1, linetype = "+/-1")) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010), breaks = 10,
expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010),
minor_breaks = seq(1890, 2010, 10),
expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010),
breaks = seq(1890, 2010, 10),
expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010),
breaks = seq(1890, 2010, 10),
minor_breaks = NULL,
expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
ggplot(tmp, aes(x = short, y = estimate, ymin = after, ymax = before, group = id, color = id)) +
geom_violin(aes(fill = "estimate", group = short), color = NA, alpha = .1) +
geom_boxplot(aes(group = short), fill = NA, size = 1, outlier.color = NA, alpha = .5) +
geom_point(position = position_dodge(1)) +
geom_errorbar(alpha = .66, width = 0, position = position_dodge(1)) +
geom_point(aes(y = qTarget, shape = "correct answer"), size = 4, color = "red")  +
coord_flip() +
scale_y_continuous(limits = c(1890, 2010),
breaks = seq(1890, 2010, 10),
minor_breaks = NULL,
expand = c(0, 0), name = "year") +
scale_shape_manual(values = c(8)) +
guides(color = "none") +
theme_light()
library(knitr)
library(tidyverse)
library(lsr)
library(prettyMD)
opts_chunk$set('echo' = F)
set.seed(20190402)
library(xml2)
dates <- read_xml("../../DateEstimation/assets/etc/questions.xml")
dates <- read_xml("../../DateEstimation/assets/etc/questions.xml")
dates[[1]]
as_list(dates)
library(knitr)
library(tidyverse)
library(lsr)
library(prettyMD)
library(xml2)
opts_chunk$set('echo' = F)
set.seed(20190402)
cleanHTML <- function(s) {
if (length(s) > 1)
return(sapply(1:length(s), function(i) cleanHTML(s[i])))
# strip newlines and html tags from prompts
s <- gsub("[\r\n]", "", DE$qPrompt)
s <- gsub("  ", "", DE$qPrompt, fixed = T)
s <- gsub("<[^>]*>([^<]*)[^>]*>", "\\1", DE$qPrompt)
}
dates <- as_list(dates)
datesXML <- dates[[1]]
d <- datesXML[[1]]
d
as.data.frame(d)
as.tibble(d)
as.tibble(d)[2,1]
as.data.frame(d)[1,1]
names(d)
dates <- NULL
nrow(dates)
as.numeric(nrow(dates))
as.numeric(nrow(dates) + 0)
length(as.numeric(nrow(dates)))
as.numeric(nrow(dates) + 1)
as.numeric(nrow(dates)) + 1
1 + 0
0 + 1
NULL + 1
datesXML <- read_xml("../../DateEstimation/assets/etc/questions.xml")
datesXML <- as_list(dates)[[1]]
datesXML <- read_xml("../../DateEstimation/assets/etc/questions.xml")
datesXML <- as_list(dates)
datesXML <- xml2::as_list(dates)
datesXML <- read_xml("../../DateEstimation/assets/etc/questions.xml")
as_list(dates)
xml2::as_list(dates)
View(datesXML)
datesXML[[2]]
library(XML)
datesXML <- xmlTreeParse("../../DateEstimation/assets/etc/questions.xml")
?XML
??XML
xmlRoot(datesXML)
datesXML <- xmlToDataFrame("../../DateEstimation/assets/etc/questions.xml")
datesXML
datesXML
dates <- xmlToDataFrame("../../DateEstimation/assets/etc/questions.xml")
dates$prompt <- cleanHTML(dates$prompt)
dates$prompt
length(dates$prompt)
length(cleanHTML(dates$prompt))
length(dates$prompt[1])
cleanHTML(dates$prompt[1])
cleanHTML <- function(s) {
if (length(s) > 1)
return(sapply(1:length(s), function(i) cleanHTML(s[i])))
# strip newlines and html tags from prompts
s <- gsub("[\r\n]", "", DE$qPrompt)
s <- gsub("  ", "", DE$qPrompt, fixed = T)
s <- gsub("<[^>]*>([^<]*)[^>]*>", "\\1", DE$qPrompt)
s
}
cleanHTML(dates$prompt[1])
x <- dates$prompt[1]
sapply(1:length(x), function(i) print(s[i]))
x <- dates$prompt[1:3]
sapply(1:length(x), function(i) print(s[i]))
cleanHTML <- function(s) {
if (length(s) > 1) {
out <- NULL
for (x in s)
out <- c(out, cleanHTML(x))
return(out)
}
# strip newlines and html tags from prompts
s <- gsub("[\r\n]", "", DE$qPrompt)
s <- gsub("  ", "", DE$qPrompt, fixed = T)
s <- gsub("<[^>]*>([^<]*)[^>]*>", "\\1", DE$qPrompt)
s
}
cleanHTML(x)
s <- dates$prompt[1]
length(s)
cleanHTML <- function(s) {
if (length(s) > 1) {
out <- NULL
for (x in s)
out <- c(out, cleanHTML(x))
return(out)
}
# strip newlines and html tags from prompts
s <- gsub("[\r\n]", "", s)
s <- gsub("  ", "", s, fixed = T)
s <- gsub("<[^>]*>([^<]*)[^>]*>", "\\1", s)
s
}
cleanHTML(dates$prompt)
cleanHTML <- function(s) {
if (length(s) > 1)
sapply(1:length(s), function(i) cleanHTML(s[i]))
# strip newlines and html tags from prompts
s <- gsub("[\r\n]", "", s)
s <- gsub("  ", "", s, fixed = T)
s <- gsub("<[^>]*>([^<]*)[^>]*>", "\\1", s)
s
}
cleanHTML(dates$prompt)
dates$prompt <- cleanHTML(dates$prompt)
dates
rm("datesXML")
ggplot(dates, aes(target)) +
geom_histogram(fill = NA) +
facet_grid(. ~ okay)
dates$target
dates$target <- as.numeric(dates$target)
dates$target
dates <- xmlToDataFrame("../../DateEstimation/assets/etc/questions.xml")
dates$prompt <- cleanHTML(dates$prompt)
numeric(dates$target)
numeric(dates$target[1])
parse_integer(dates$target)
dates$target <- parse_integer(dates$target)
ggplot(dates, aes(target)) +
geom_histogram(fill = NA) +
facet_grid(. ~ okay)
ggplot(dates, aes(target)) +
geom_histogram(fill = NA) +
facet_grid(okay ~ .)
ggplot(dates, aes(target)) +
geom_histogram(fill = NA, data = dates[dates$okay == 1, ]) +
geom_freqpoly()
ggplot(dates, aes(target)) +
geom_histogram(data = dates[dates$okay == 1, ]) +
geom_freqpoly()
ggplot(dates, aes(target)) +
geom_histogram(data = dates[dates$okay == 1, ], binwidth = 10) +
geom_freqpoly(binwidth = 10)
ggplot(dates, aes(target)) +
geom_histogram(data = dates[dates$okay == 1, ], binwidth = 10) +
geom_freqpoly(binwidth = 10) +
geom_point(aes(y = 10))
ggplot(dates, aes(target)) +
geom_histogram(data = dates[dates$okay == 1, ], binwidth = 10) +
geom_freqpoly(binwidth = 10) +
geom_point(aes(y = 10, colour = okay))
ggplot(dates, aes(target)) +
geom_histogram(data = dates[dates$okay == 1, ], binwidth = 10) +
geom_freqpoly(binwidth = 10) +
geom_point(aes(y = 10, colour = okay), alpha = 0.5)
ggplot(dates, aes(target)) +
geom_histogram(data = dates[dates$okay == 1, ], binwidth = 10) +
geom_freqpoly(binwidth = 10) +
geom_point(aes(y = 10, colour = okay),
position = position_jitter(width = NULL, height = 1))
dates$okay <- parse_integer(dates$okay)
parse_logical(dates$okay)
dates <- xmlToDataFrame("../../DateEstimation/assets/etc/questions.xml")
dates$prompt <- cleanHTML(dates$prompt)
dates$target <- parse_integer(dates$target)
dates$okay <- parse_logical(dates$okay)
dates
ggplot(dates, aes(target)) +
geom_histogram(data = dates[dates$okay == 1, ], binwidth = 10) +
geom_freqpoly(binwidth = 10) +
geom_point(aes(y = 10, colour = factor(okay)),
position = position_jitter(width = NULL, height = 1))
DE <- as.tibble(read.csv("../../data/public/dateCheck_trialStream.csv"))
DE$qPrompt <- cleanHTML(DE$qPrompt)
DE <- DE[DE$qPrompt %in% dates$prompt[dates$okay], ]
nrow(DE)
DE$okayResponse <- factor(T)
levels(DE$okayResponse) <- c(T,
"Estimate out of range",
"After out of range",
"Before out of range",
"After after estimate",
"Before before estimate")
DE$okayResponse[DE$estimate > 2010 | DE$estimate < 1890] <- "Estimate out of range"
DE$okayResponse[DE$after < 1890] <- "After out of range"
DE$okayResponse[DE$before > 2010] <- "Before out of range"
DE$okayResponse[DE$after > DE$estimate] <- "After after estimate"
DE$okayResponse[DE$before < DE$estimate] <- "Before before estimate"
kable(DE$okayResponse)
table(DE$okayResponse)
DE <- DE[DE$okayResponse == T, ]
DE$error <- abs(DE$estimate - DE$qTarget)
DE$bracketed <- as.numeric(DE$after <= DE$qTarget & DE$before >= DE$qTarget)
DE$bWidth <- DE$before - DE$after
DE$hit <- as.numeric(DE$estimate == DE$qTarget)
kable(aggregate(. ~ prompt, data = DE, FUN = mean))
aggregate(. ~ prompt, data = DE, FUN = mean)
aggregate(~ prompt, data = DE, FUN = mean)
aggregate(cbind(error, bracketed, bWidth, hit) ~ prompt, data = DE, FUN = mean)
aggregate(. ~ qPrompt, data = DE, FUN = mean)
DE$studyId
DE$studyVersion
kable(aggregate(cbind(qTarget, estimate, after, before,
timeA, error, bracketed, bWidth, hit) ~ qPrompt,
data = DE, FUN = mean))
kable(num2str(aggregate(cbind(qTarget, estimate, after, before,
timeA, error, bracketed, bWidth, hit) ~ qPrompt,
data = DE, FUN = mean)))
DE$error <- abs(DE$estimate - DE$qTarget)
DE$bracketed <- as.numeric(DE$after <= DE$qTarget & DE$before >= DE$qTarget)
DE$bWidth <- DE$before - DE$after
DE$hit <- as.numeric(DE$estimate == DE$qTarget)
tmp <- aggregate(cbind(qTarget, estimate, after, before,
timeA, error, bracketed, bWidth, hit) ~ qPrompt,
data = DE, FUN = mean)
kable(num2str(tmp))
kable(t(colMeans(tmp)))
kable(t(colMeans(tmp[, -1])))
kable((colMeans(tmp[, -1])))
kable(num2str(colMeans(tmp[, -1])))
