pickRate))
}
r <- apply(r, 2, mean)
df.xiv <- rbind(df.xiv, data.frame(pid,
referenceAdvisor = r['referenceAdvisor'],
agreementDiff = r['agreementDiff'],
pickRate = r['pickRate']))
}
df.xiv
r
advisors
rev(advisors)
cor.test(df.xiv$agreementDiff, df.xiv$pickRate)
correlationBF(df.xiv$agreementDiff, df.xiv$pickRate)
df.xiv$sameAdviceProfile <- round(df.xiv$referenceAdvisor) == df.xiv$referenceAdvisor
df.xiv
gg.xiv <- ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid, shape = sameAdviceProfile)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'lm', fill = 'lightblue', alpha = .25) +
scale_shape_discrete(labels = c('Consistent', 'Inconsistent'), name = 'Most agreeing advisor') +
labs(title = 'Initial agreement effects',
y = 'P(More agreeing advisor chosen)',
x = 'Mean agreement difference')
df.xiv <- NULL
for(pid in unique(trials$pid)) {
ts <- trials[trials$pid == pid, ]
r <- NULL
for(i in length(unique(ts$block))/2) {
fBlock <- unique(ts$block)[2*(i-1)+1]
cBlock <- unique(ts$block)[2*(i-1)+2]
tsF <- ts[ts$block == fBlock, ]
tsC <- ts[ts$block == cBlock, ]
advisors <- unique(tsF$adviceType)
agrDiff <- mean(tsF$advisorAgrees[tsF$adviceType == advisors[1]]) -
mean(tsF$advisorAgrees[tsF$adviceType == advisors[2]])
pickRate <- mean(tsC$adviceType == advisors[1])
# orient towards positive agreement difference
if(agrDiff < 0) {
agrDiff <- abs(agrDiff)
pickRate <- 1-pickRate
advisors <- rev(advisors)
}
r <- rbind(r, data.frame(referenceAdvisor = advisors[1],
agreementDiff = agrDiff,
pickRate))
}
r <- apply(r, 2, mean)
df.xiv <- rbind(df.xiv, data.frame(pid = factor(pid),
referenceAdvisor = r['referenceAdvisor'],
agreementDiff = r['agreementDiff'],
pickRate = r['pickRate']))
}
cor.test(df.xiv$agreementDiff, df.xiv$pickRate)
correlationBF(df.xiv$agreementDiff, df.xiv$pickRate)
df.xiv$sameAdviceProfile <- round(df.xiv$referenceAdvisor) == df.xiv$referenceAdvisor
gg.xiv <- ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid, shape = sameAdviceProfile)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'lm', fill = 'lightblue', alpha = .25) +
scale_shape_discrete(labels = c('Consistent', 'Inconsistent'), name = 'Most agreeing advisor') +
labs(title = 'Initial agreement effects',
y = 'P(More agreeing advisor chosen)',
x = 'Mean agreement difference')
gg.xiv
gg.xiv <- ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid, shape = sameAdviceProfile)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'lm', fill = 'lightblue', alpha = .25) +
scale_shape_discrete(labels = c('Consistent', 'Inconsistent'), name = 'Most agreeing advisor') +
labs(title = 'Initial agreement effects',
y = 'P(More agreeing advisor chosen)',
x = 'Mean agreement difference') +
style.long
gg.xiv
gg.xiv <- ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid, shape = sameAdviceProfile)) +
geom_point(alpha = 0.5) +
geom_smooth() +
geom_smooth(method = 'lm', fill = 'lightblue', alpha = .25) +
scale_shape_discrete(labels = c('Consistent', 'Inconsistent'), name = 'Most agreeing advisor') +
labs(title = 'Initial agreement effects',
y = 'P(More agreeing advisor chosen)',
x = 'Mean agreement difference') +
style.long
gg.xiv
gg.xiv <- ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'lm', fill = 'lightblue', alpha = .25) +
scale_shape_discrete(labels = c('Consistent', 'Inconsistent'), name = 'Most agreeing advisor') +
labs(title = 'Initial agreement effects',
y = 'P(More agreeing advisor chosen)',
x = 'Mean agreement difference') +
style.long
gg.xiv
gg.xiv <- ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid, shape = sameAdviceProfile)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'lm', fill = 'lightblue') +
scale_shape_discrete(labels = c('Consistent', 'Inconsistent'), name = 'Most agreeing advisor') +
labs(title = 'Initial agreement effects',
y = 'P(More agreeing advisor chosen)',
x = 'Mean agreement difference') +
style.long
gg.xiv
gg.xii.ii.ii
gg.xii.ii.ii <- ggplot(df.xii.ii.ii, aes(x = HighAccPref, y = Resolution)) +
geom_vline(linetype = "dashed", color = "black", xintercept = .5, size = 1) +
geom_smooth(method = 'lm') +
geom_point(aes(colour = as.factor(pid))) +
labs(title = 'Correlation between metacognitive resolution and \nHighAcc advisor preference') +
style.long
gg.xii.ii.ii
df.xii.ii.ii <- NULL
for(pid in unique(trials$pid)) {
tmp <- trials[trials$pid==pid, ]
df.xii.ii.ii <- rbind(df.xii.ii.ii,
data.frame(pid,
HighAccPref=mean(tmp$adviceType[tmp$type==trialTypes$choice]==adviceTypes$HighAcc),
Resolution=lm(initialCorrect ~ initialConfidence, tmp)$coefficients[2]))
}
cor.test(df.xii.ii.ii$HighAccPref, df.xii.ii.ii$Resolution)
correlationBF(df.xii.ii.ii$HighAccPref, df.xii.ii.ii$Resolution)
gg.xii.ii.ii <- ggplot(df.xii.ii.ii, aes(x = HighAccPref, y = Resolution)) +
geom_vline(linetype = "dashed", color = "black", xintercept = .5, size = 1) +
geom_smooth(method = 'lm') +
geom_point(aes(colour = as.factor(pid))) +
labs(title = 'Correlation between metacognitive resolution and \nHighAcc advisor preference') +
style.long
gg.xii.ii.ii
ggplot(trials, aes(x = initialConfidence, y = as.numeric(initialCorrect), colour = as.factor(pid))) +
geom_smooth(method = 'lm', se = F, size = .5) +
geom_smooth(inherit.aes = F, aes(x = initialConfidence, y = as.numeric(initialCorrect)),
method = 'lm', se = T, colour = 'black', alpha = .3, linetype = 'dashed') +
labs(title = 'P(Correct) by confidence for initial responses') +
style.long
ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid, shape = sameAdviceProfile)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'lm', fill = 'lightblue', alpha = .25) +
scale_shape_discrete(labels = c('Consistent', 'Inconsistent'), name = 'Most agreeing advisor') +
labs(title = 'Initial agreement effects',
y = 'P(More agreeing advisor chosen)',
x = 'Mean agreement difference') +
style.long
gg.xiv <- ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid, shape = sameAdviceProfile)) +
geom_smooth(method = 'lm', fill = 'lightblue', alpha = .25) +
geom_point(alpha = 0.5) +
scale_shape_discrete(labels = c('Consistent', 'Inconsistent'), name = 'Most agreeing advisor') +
labs(title = 'Initial agreement effects',
y = 'P(More agreeing advisor chosen)',
x = 'Mean agreement difference') +
style.long
gg.xiv
gg.xiv <- ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid, shape = sameAdviceProfile)) +
geom_smooth() +
geom_point(alpha = 0.5) +
scale_shape_discrete(labels = c('Consistent', 'Inconsistent'), name = 'Most agreeing advisor') +
labs(title = 'Initial agreement effects',
y = 'P(More agreeing advisor chosen)',
x = 'Mean agreement difference') +
style.long
gg.xiv
lm(pickRate ~ agreementDiff, data = df.xiv)
ggplot(df.xiv, aes(x = agreementDiff, y = pickRate)) + geom_smooth()
ggplot(df.xiv, aes(x = agreementDiff, y = pickRate)) + geom_smooth(method = 'lm')
ggplot(df.xiv, aes(x = agreementDiff, y = pickRate)) + geom_smooth(method = 'lm') + geom_point()
ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid)) + geom_smooth(method = 'lm') + geom_point()
ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid)) + geom_smooth(method = 'lm', aes(colour = NA)) + geom_point()
gg.xiv <- ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid, shape = sameAdviceProfile)) +
geom_smooth(method = 'lm', colour = 'blue', fill = 'lightblue', alpha = .25) +
geom_point(alpha = 0.5) +
scale_shape_discrete(labels = c('Consistent', 'Inconsistent'), name = 'Most agreeing advisor') +
labs(title = 'Initial agreement effects',
y = 'P(More agreeing advisor chosen)',
x = 'Mean agreement difference') +
style.long
gg.xiv
gg.xiv <- ggplot(df.xiv, aes(x = agreementDiff, y = pickRate, colour = pid, shape = sameAdviceProfile)) +
geom_smooth(method = 'lm', colour = 'blue', fill = 'lightblue', alpha = .25) +
geom_point(alpha = 0.5) +
scale_shape_discrete(labels = c('Consistent', 'Inconsistent'), name = 'Most agreeing advisor') +
scale_x_continuous(expand = c(0.005,0)) +
labs(title = 'Initial agreement effects',
y = 'P(More agreeing advisor chosen)',
x = 'Mean agreement difference') +
style.long
gg.xiv
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/ESM_core.R')
df.xiv <- df.initialAgreement(trials)
cor.test(df.xiv$agreementDiff, df.xiv$pickRate)
tmp <- NULL
for(pid in unique(trials$pid)) {
ts <- trials[trials$pid == pid, ]
r <- NULL
for(i in length(unique(ts$block))/2) {
fBlock <- unique(ts$block)[2*(i-1)+1]
cBlock <- unique(ts$block)[2*(i-1)+2]
tsF <- ts[ts$block == fBlock, ]
tsC <- ts[ts$block == cBlock, ]
advisors <- unique(tsF$adviceType)
agrDiff <- mean(tsF$advisorAgrees[tsF$adviceType == advisors[1]]) -
mean(tsF$advisorAgrees[tsF$adviceType == advisors[2]])
pickRate <- mean(tsC$adviceType == advisors[1])
# orient towards positive agreement difference
if(agrDiff < 0) {
agrDiff <- abs(agrDiff)
pickRate <- 1-pickRate
advisors <- rev(advisors)
}
r <- rbind(r, data.frame(referenceAdvisor = advisors[1],
agreementDiff = agrDiff,
pickRate))
}
r <- apply(r, 2, mean)
tmp <- rbind(tmp, data.frame(pid = factor(pid),
referenceAdvisor = r['referenceAdvisor'],
agreementDiff = r['agreementDiff'],
pickRate = r['pickRate']))
}
tmp$sameAdviceProfile <- round(tmp$referenceAdvisor) == tmp$referenceAdvisor
df.initialAgreement(trials)
print(df.initialAgreement(trials))
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/ESM_core.R')
df.xiv <- df.initialAgreement(trials)
cor.test(df.xiv$agreementDiff, df.xiv$pickRate)
correlationBF(df.xiv$agreementDiff, df.xiv$pickRate)
df.xiv <- df.initialAgreement(trials)
cor.test(df.xiv$agreementDiff, df.xiv$pickRate)
correlationBF(df.xiv$agreementDiff, df.xiv$pickRate)
gg.xiv <- gg.initialAgreement(trials)
gg.xiv
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/ESM_core.R')
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence(tmp)
print(summary(aov.vii.v))
printMeans.influence(tmp)
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence.allForced(tmp)
print(summary(aov.vii.v))
printMeans.influence(tmp)
gg.influence(tmp)
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/ESM_core.R')
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence.allForced(tmp)
print(summary(aov.vii.v))
printMeans.influence(tmp)
gg.influence(tmp)
gg.vii.ii <- gg.influence(trials[trials$confidenceCategory==confidenceCategories$medium
& trials$finalAnswer==trials$correctAnswer, ]) +
labs(title = 'Advisor Influence on medium-confidence trials')
gg.vii.ii
dodge.width.influence <- .8
gg.vii.ii <- gg.influence(trials[trials$confidenceCategory==confidenceCategories$medium
& trials$finalAnswer==trials$correctAnswer, ]) +
labs(title = 'Advisor Influence on medium-confidence trials')
gg.vii.ii
dodge.width.influence <- .6
gg.vii.ii <- gg.influence(trials[trials$confidenceCategory==confidenceCategories$medium
& trials$finalAnswer==trials$correctAnswer, ]) +
labs(title = 'Advisor Influence on medium-confidence trials')
gg.vii.ii
dodge.width.influence <- .4
gg.vii.ii <- gg.influence(trials[trials$confidenceCategory==confidenceCategories$medium
& trials$finalAnswer==trials$correctAnswer, ]) +
labs(title = 'Advisor Influence on medium-confidence trials')
gg.vii.ii
tmp <- trials
tmp$influenceChanges <- (tmp$rawInfluence - tmp$influence) != 0
tmp.2 <- aggregate(influenceChanges ~ pid, tmp, mean)
cl <- mean_cl_normal(tmp.2$influenceChanges)
rn <- range(tmp.2$influenceChanges)
df.vii.i <- data.frame('P(influenceChanges)'=cl$y,
clLow=cl$ymin, clHigh=cl$ymax,
rangeLow=rn[1], rangeHigh=rn[2])
kable(df.vii.i)
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence.allForced(tmp)
print(summary(aov.vii.v))
printMeans.influence(tmp)
gg.influence(tmp)
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/ESM_core.R')
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence.allForced(tmp)
print(summary(aov.vii.v))
printMeans.influence(tmp)
gg.influence(tmp)
library(ez)
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence.allForced(tmp)
print(summary(aov.vii.v))
ezANOVA(data = tmp.influence(tmp),
dv = influence, wid = pid, within = list('advisorAgrees', 'adviceType'))
printMeans.influence(tmp)
gg.influence(tmp)
aov.vii.iii <- aov.influence(trials[trials$confidenceCategory==confidenceCategories$medium
& trials$finalAnswer==trials$correctAnswer, ])
print('As above, looking at only trials where intial decision was correct and made with middle confidence:')
print(summary(aov.vii.iii))
ezANOVA(data = tmp.influence(trials[trials$confidenceCategory==confidenceCategories$medium
& trials$finalAnswer==trials$correctAnswer, ]),
dv = influence, wid = pid, within = list('advisorAgrees', 'adviceType', 'hasChoice'))
summary(ezANOVA(data = tmp.influence(trials[trials$confidenceCategory==confidenceCategories$medium
& trials$finalAnswer==trials$correctAnswer, ]),
dv = influence, wid = pid, within = list('advisorAgrees', 'adviceType', 'hasChoice'),
return_aov = T))
ezANOVA(data = tmp.influence(trials[trials$confidenceCategory==confidenceCategories$medium
& trials$finalAnswer==trials$correctAnswer, ]),
dv = influence, wid = pid, within = list('advisorAgrees', 'adviceType', 'hasChoice'),
return_aov = T)
print(summary(aov.vii.iii))
ezANOVA(data = tmp.influence(trials[trials$confidenceCategory==confidenceCategories$medium
& trials$finalAnswer==trials$correctAnswer, ]),
dv = influence, wid = pid, within = list('advisorAgrees', 'adviceType', 'hasChoice'),
return_aov = T)
apply(data.frame(1:5,1:5), 2, factor)
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/ESM_core.R')
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence(tmp, list('adviceType', 'hasChoice'))
print(summary(aov.vii.v))
printMeans.influence(tmp)
gg.influence(tmp)
.('a','b')
tmp <- tmp.influence(trials)
factors = list('adviceType', 'hasChoice', 'advisorAgrees')
ezANOVA(data = tmp, dv = influence, wid = pid, within = .factors, return_aov = T)
ezANOVA(data = tmp, dv = influence, wid = pid, within = factors, return_aov = T)
factors =
ezANOVA(data = tmp, dv = influence, wid = pid, within = .(adviceType, hasChoice, advisorAgrees), return_aov = T)
factors =
ezANOVA(data = tmp, dv = influence, wid = pid, within = .(adviceType, hasChoice, advisorAgrees), return_aov = T)
ezANOVA(data = tmp, dv = influence, wid = pid, within = .(adviceType, hasChoice, advisorAgrees), return_aov = T)
ezANOVA(data = tmp, dv = influence, wid = pid, within = .(adviceType, advisorAgrees), return_aov = T)
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence(tmp, list('adviceType', 'hasChoice'))
print(summary(aov.vii.v))
printMeans.influence(tmp)
gg.influence(tmp)
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence(tmp, list('adviceType', 'hasChoice'))
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/ESM_core.R')
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/ESM_core.R')
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence(tmp, list('adviceType', 'hasChoice'))
print(summary(aov.vii.v))
printMeans.influence(tmp)
gg.influence(tmp)
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence(tmp)
print(summary(aov.vii.v))
printMeans.influence(tmp)
gg.influence(tmp)
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence(tmp)
print(summary(aov.vii.v))
printMeans.influence(tmp)
gg.influence(tmp)
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/ESM_core.R')
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence.allForced(tmp)
print(summary(aov.vii.v))
printMeans.influence(tmp)
gg.influence(tmp)
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence.allForced(tmp)
summary(aov.vii.v$aov)
aov.vii.v$ANOVA
printMeans.influence(tmp)
gg.influence(tmp)
tmp <- trials[trials$type==trialTypes$force &
trials$confidenceCategory==confidenceCategories$medium, ]
aov.vii.v <- aov.influence.allForced(tmp)
aov.vii.v$ANOVA
printMeans.influence(tmp)
gg.influence(tmp)
obj
typeof(aov.vii.v)
typeof(aov.vii.v$ANOVA)
typeof(aov.vii.v$ANOVA)
aov.vii.v$foo
x <- aov.vii.v
x <- x$ANOVA
x$Effect
x$F
x
typeof(x)
obj <- x
obj$F <- num2str(obj$F)
obj
obj$p <- prop2str(obj$p, 3)
obj
obj$ges <- prop2str(obj$ges, 4)
obj
proportion <- obj$ges[1]
proportion <- x$ges[1]
precision <- 4
proportion <- round(proportion, precision)
proportion
if(abs(proportion) < 1)
x <- sub('^-?0\\.', ifelse(proportion < 0, '-.', '.'), as.character(proportion))
else
x <- as.character(proportion)
x <- sub('^-?0\\.', ifelse(proportion < 0, '-.', '.'), as.character(proportion))
#' Format proportion to be a string beginning with a decimal point.
#' Does not respect scientific notation options
#' @param proportion number to convert to string
#' @param precision decimal places to preserve
#' @param truncateZeros whether to strip trailing 0s
#' @return \{code}proportion stripped of leading 0s and rounded to \{code}precision decimal places
prop2str <- function(proportion, precision = 2, truncateZeros = F) {
if(length(proportion) > 1)
return(sapply(proportion, prop2str))
if(is.nan(proportion))
return(as.character(proportion))
proportion <- round(proportion, precision)
# if we hit scientific notation then give up!
if(grepl('e', proportion, fixed = T))
return(as.character(proportion))
if(abs(proportion) < 1)
x <- sub('^-?0\\.', ifelse(proportion < 0, '-.', '.'), as.character(proportion))
else
x <- as.character(proportion)
if(truncateZeros)
return(x)
dot <- regexpr('.', x, fixed = T)
if(dot == -1) {
x <- paste0(x,'.')
dot <- regexpr('.', x, fixed = T)
}
right <- substr(x, dot, dot+precision) # portion of x after 0
right <- paste0(right, strrep('0',precision-nchar(right)+1))
x <- paste0(substr(x, 1, dot-1), right)
return(x)
}
prop2str(aov.vii.v$ANOVA$ges[1])
prop2str(aov.vii.v$ANOVA$ges[1], 4)
prop2str(aov.vii.v$ANOVA$ges[1], 5)
prop2str(aov.vii.v$ANOVA$p[1], 5)
prop2str(aov.vii.v$ANOVA$p[2], 5)
prop2str(aov.vii.v$ANOVA$p[2], 4)
prop2str(aov.vii.v$ANOVA$p[2], 5)
obj$F <- num2str(obj$F)
obj$p <- prop2str(obj$p, 3)
obj$ges <- prop2str(obj$ges, 4)
as.numeric(num)
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/miscFunctions.R')
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/miscFunctions.R')
aov.iii.i <- aov.agreementContingencies(trials)
prettifyEZ(aov.iii.i)
#' Make ezANOVA's $ANOVA output neater by rounding appropriately
#' @param obj ezANOVA output (supports return_aov = T|F)
prettifyEZ <- function(obj) {
# if there's a $ANOVA item use that instead
if(!is.null(obj$ANOVA))
return(prettifyEZ(obj$ANOVA))
obj$F <- num2str(obj$F)
obj$p <- prop2str(obj$p, 3)
obj$ges <- prop2str(obj$ges, 4)
return(obj)
}
prettifyEZ(aov.iii.i)
prop2str(aov.iii.i$ANOVA$ges[2])
prop2str(aov.iii.i$ANOVA$ges[2],4)
prop2str(aov.iii.i$ANOVA$ges[2],5)
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/miscFunctions.R')
prettifyEZ(aov.iii.i)
spssData <- tmp.influence(trials)
haven::write_sav(spssData, 'spss/spssData')
?melt
cast(spssData, adviceType + hasChoice + advisorAgrees ~ pid)
reshape2::cast(spssData, adviceType + hasChoice + advisorAgrees ~ pid)
reshape2::dcast(spssData, adviceType + hasChoice + advisorAgrees ~ pid)
reshape2::dcast(spssData, pid ~ adviceType + hasChoice + advisorAgrees)
levels(spssData$adviceType)
getAdviceTypeName(levels(spssData$adviceType))
levels(spssData$hasChoice)
levels(spssData$advisorAgrees)
haven::write_sav(spssDataWide, 'spssData.sav')
spssData <- tmp.influence(trials)
levels(spssData$adviceType) <- getAdviceTypeName(levels(spssData$adviceType))
levels(spssData$hasChoice) <- c('forced', 'choice')
levels(spssData$advisorAgrees) <- c('disagree', 'agree')
spssData
spssDataWide <- reshape2::dcast(spssData, pid ~ adviceType + hasChoice + advisorAgrees)
spssDataWide
haven::write_sav(spssDataWide, 'spssData.sav')
haven::write_sav(spssDataWide, 'spss/spssData.sav')
haven::write_sav(spssDataWide, 'spss/spssData.sav')
lsr::ciMean(1:100)
printMean(1:100)
?qt
vector <- 1:100
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/miscFunctions.R')
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/ESM_core.R')
print('2x2x2 Mixed ANOVA of advisor type x choice x agreement')
aov.vii.i <- aov.influence(trials)
prettifyEZ(aov.vii.i)
printMeans.influence(trials)
tmp <- tmp.influence(trials)
ciMean(tmp$influence[tmp$advisorAgrees==F])
ciMean(tmp$influence[tmp$advisorAgrees==F], .9)
mean_cl_normal(tmp$influence[tmp$advisorAgrees==F])
mean_cl_normal(tmp$influence[tmp$advisorAgrees==F], .9)
mean_cl_normal(tmp$influence[tmp$advisorAgrees==F], conf.int = .9)
