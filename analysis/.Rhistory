responseMarker + decision + hasFeedback + pid,
decisions, mean),
aes(x = responseMarker, y = responseError)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(hasFeedback ~ decision, labeller = label_both) +
scale_linetype_manual(values = c("dashed")) +
labs(x = "response marker width (years)",
y = "|target - response marker centre| (years)")
tmp <- markerBreakdown(responseError, block2Decisions)
num2str.tibble(tmp$first)
num2str.tibble(tmp$last)
ggplot(aggregate(responseError ~
responseMarker + decision + hasFeedback + pid,
block2Decisions, mean),
aes(x = responseMarker, y = responseError)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(hasFeedback ~ decision, labeller = label_both) +
scale_linetype_manual(values = c("dashed")) +
labs(x = "response marker width (years)",
y = "|target - response marker centre| (years)")
tmp <- markerBreakdown(responseScore, decisions)
num2str.tibble(tmp$first)
num2str.tibble(tmp$last)
ggplot(aggregate(responseScore ~
responseMarker + decision + hasFeedback + pid,
decisions, mean),
aes(x = responseMarker, y = responseScore)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(hasFeedback ~ decision, labeller = label_both) +
scale_linetype_manual(values = c("dashed")) +
labs(x = "response marker width (years)",
y = "points scored")
tmp <- markerBreakdown(timeEnd, decisions)
num2str.tibble(tmp$last)
ggplot(aggregate(timeEnd ~
responseMarker + decision + hasFeedback + pid,
decisions, mean),
aes(x = responseMarker,
y = timeEnd / 1000)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(~ hasFeedback, labeller = label_both) +
scale_linetype_manual(values = c("dashed")) +
labs(x = "response marker width (years)",
y = "response time (s)")
decisions$rt <- decisions$responseTimeEstimate - decisions$timeResponseOpen
tmp <- markerBreakdown(rt, decisions)
num2str.tibble(tmp$first)
num2str.tibble(tmp$last)
ggplot(aggregate(rt ~
responseMarker + decision + hasFeedback + pid,
decisions, mean),
aes(x = responseMarker,
y = rt / 1000)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(hasFeedback ~ decision, labeller = label_both) +
scale_linetype_manual(values = c("dashed")) +
labs(x = "response marker width (years)",
y = "response time (s)")
as.tibble(aggregate(meanPosition ~ idDescription + hasFeedback, advisors, mean))
advisors$meanPosition
advisors
out <- list()
for (f in unique(AdvisedTrial$hasFeedback)) {
m <- AdvisedTrial$hasFeedback == f
tmp <- NULL
for (a in advisorNames) {
r <- tibble(feedback = f, advisor = a)
for (x in adviceTypes) {
eq <- as.formula(paste0(a, ".nominalType ~ pid"))
r[, x] <- mean(aggregate(eq,
AdvisedTrial[m, ],
function(q) mean(q == x))[, 2])
}
tmp <- rbind(tmp, r)
}
out[[as.character(f)]] <- tmp
}
adviceTypes
adviceTypes <- unlist(types)
out <- list()
for (f in unique(AdvisedTrial$hasFeedback)) {
m <- AdvisedTrial$hasFeedback == f
tmp <- NULL
for (a in advisorNames) {
r <- tibble(feedback = f, advisor = a)
for (x in adviceTypes) {
eq <- as.formula(paste0(a, ".nominalType ~ pid"))
r[, x] <- mean(aggregate(eq,
AdvisedTrial[m, ],
function(q) mean(q == x))[, 2])
}
tmp <- rbind(tmp, r)
}
out[[as.character(f)]] <- tmp
}
prop2str(out$`TRUE`, precision = 3)
prop2str(out$`FALSE`, precision = 3)
out <- list()
for (f in unique(AdvisedTrial$hasFeedback)) {
m <- AdvisedTrial$hasFeedback == f
tmp <- NULL
for (a in advisorNames) {
r <- tibble(feedback = f, advisor = a)
for (x in adviceTypes) {
eq <- as.formula(paste0(a, ".actualType ~ pid"))
r[, x] <- mean(aggregate(eq,
AdvisedTrial[m, ],
function(q) mean(q == x))[, 2])
}
tmp <- rbind(tmp, r)
}
out[[as.character(f)]] <- tmp
}
prop2str(out$`TRUE`, precision = 3)
prop2str(out$`FALSE`, precision = 3)
tmp <- NULL
for (a in advisorNames) {
eq <- as.formula(paste0("cbind(", a, ".accurate, ",
a, ".error) ~ pid + hasFeedback"))
r <- aggregate(eq, AdvisedTrial, mean, na.rm = T)
colnames(r) <- c("pid", "feedback", "accuracy", "error")
r$advisor = a
tmp <- rbind(tmp, as.tibble(r))
}
prop2str(as.tibble(aggregate(cbind(accuracy, error) ~ advisor + feedback,
tmp,
mean, na.rm = T)),
precision = 3)
tmp <- gather(tmp, "var", "value", accuracy:error)
ggplot(tmp, aes(x = advisor, y = value, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_grid(var ~ feedback, scales = "free_y", labeller = label_both)
tmp <- NULL
for (a in advisorNames) {
eq <- as.formula(paste0(a, ".agree ~ pid + hasFeedback"))
r <- aggregate(eq, AdvisedTrial, mean, na.rm = T)
colnames(r) <- c("pid", "feedback", "agreement")
r$advisor <- a
tmp <- rbind(tmp, r)
}
prop2str(as.tibble(aggregate(agreement ~ advisor + feedback,
tmp, mean, na.rm = T)),
precision = 3)
# Trials - advisor-specific variables
for (a in advisorNames) {
# Accuracy
AdvisedTrial[, paste0(a, ".accurate")] <-
(AdvisedTrial[, paste0(a, ".advice")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) <=
AdvisedTrial[, "correctAnswer"] &
(AdvisedTrial[, paste0(a, ".advice")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) >=
AdvisedTrial[, "correctAnswer"]
# Error
AdvisedTrial[, paste0(a, ".error")] <-
abs(AdvisedTrial[, paste0(a, ".advice")] - AdvisedTrial[, "correctAnswer"])
# Weight on Advice
i <- AdvisedTrial[, "responseEstimateLeft"] +
(AdvisedTrial[, "responseMarkerWidth"] - 1) / 2
f <- AdvisedTrial[, "responseEstimateLeftFinal"] +
(AdvisedTrial[, "responseMarkerWidthFinal"] - 1) / 2
adv <- AdvisedTrial[, paste0(a, ".advice")]
x <- ((f - i) / (adv - i))
AdvisedTrial[, paste0(a, ".woaRaw")] <- x
x[x < 0] <- 0
x[x > 1] <- 1
AdvisedTrial[, paste0(a, ".woa")] <- x
# Agreement
for (d in c("", "Final")) {
minA <- AdvisedTrial[, paste0(a, ".advice")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)
maxA <- AdvisedTrial[, paste0(a, ".advice")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)
minP <- AdvisedTrial[, paste0("responseEstimateLeft", d)]
maxP <- minP + AdvisedTrial[, paste0("responseMarkerWidth", d)]
AdvisedTrial[, paste0(a, ".agree", d)] <-
((minA >= minP) & (minA <= maxP)) | ((maxA >= minP) & (maxA <= minP))
# Distance
reMid <- minP + (maxP - minP) / 2
advice <- AdvisedTrial[, paste0(a, ".advice")]
AdvisedTrial[, paste0(a, ".distance", d)] <- abs(reMid - advice)
}
# Agreement change
AdvisedTrial[, paste0(a, ".agreementChange")] <-
AdvisedTrial[, paste0(a, ".agreeFinal")] -
AdvisedTrial[, paste0(a, ".agree")]
}
tmp <- NULL
for (a in advisorNames) {
eq <- as.formula(paste0(a, ".distance) ~ pid + hasFeedback"))
r <- aggregate(eq, AdvisedTrial, mean, na.rm = T)
colnames(r) <- c("pid", "feedback", "accuracy", "distance")
r$advisor = a
tmp <- rbind(tmp, as.tibble(r))
}
tmp <- NULL
for (a in advisorNames) {
eq <- as.formula(paste0(a, ".distance ~ pid + hasFeedback"))
r <- aggregate(eq, AdvisedTrial, mean, na.rm = T)
colnames(r) <- c("pid", "feedback", "accuracy", "distance")
r$advisor = a
tmp <- rbind(tmp, as.tibble(r))
}
tmp <- NULL
for (a in advisorNames) {
eq <- as.formula(paste0(a, ".distance ~ pid + hasFeedback"))
r <- aggregate(eq, AdvisedTrial, mean, na.rm = T)
colnames(r) <- c("pid", "feedback", "distance")
r$advisor = a
tmp <- rbind(tmp, as.tibble(r))
}
prop2str(as.tibble(aggregate(distance ~ advisor + feedback,
tmp,
mean, na.rm = T)),
precision = 3)
ggplot(tmp, aes(x = advisor, y = distance, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_wrap(~ feedback, scales = "free_y", labeller = label_both)
ggplot(tmp, aes(x = advisor, y = distance, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_wrap(~ feedback, labeller = label_both)
tmp <- NULL
for (a in advisorNames) {
eq <- as.formula(paste0(a, ".woa ~ pid + hasFeedback"))
r <- aggregate(eq, AdvisedTrial, mean, na.rm = T)
colnames(r) <- c("pid", "feedback", "WoA")
r$advisor <- a
tmp <- rbind(tmp, r)
}
prop2str(as.tibble(aggregate(WoA ~ advisor + feedback, tmp, mean, na.rm = T)),
precision = 3)
ggplot(tmp, aes(x = advisor, y = WoA, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_wrap(~feedback, labeller = label_both)
tmp <- NULL
for (a in advisorNames) {
x <- block2[block2$advisor0idDescription == a, ]
eq <- as.formula(paste0(a, ".woa ~ pid + hasFeedback"))
r <- aggregate(eq, x, mean, na.rm = T)
colnames(r) <- c("pid", "feedback", "WoA")
r$advisor <- a
tmp <- rbind(tmp, r)
}
prop2str(as.tibble(aggregate(WoA ~ advisor + feedback, tmp, mean, na.rm = T)),
precision = 3)
ggplot(tmp, aes(x = advisor, y = WoA, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_line(alpha = .5, aes(colour = pid, group = pid)) +
geom_point(alpha = .5, aes(colour = pid)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
facet_wrap(~feedback, labeller = label_both)
low <- 0
high <- 1
n <- 11
block2$woa <- ""
block2$woa[block2$advisor0woaRaw >= 1] <- ">=1"
for (x in rev(seq(low, high, length.out = n))) {
block2$woa[block2$advisor0woaRaw < x] <- paste0("<", x)
}
block2$woa <- factor(block2$woa)
block2 <- block2[!is.nan(block2$advisor0woaRaw), ]
ggplot(block2, aes(woa)) +
geom_histogram(stat = "count") +
facet_grid(hasFeedback ~ advisor0idDescription, labeller = label_both)
names(block2)
block2$advisor0woaRaw <- sapply(1:nrow(block2),
function(i)
block2[i, block2$advisor0idDescription[i]])
block2$advisor0woaRaw <- sapply(1:nrow(block2), function(i)
block2[i, as.character(block2$advisor0idDescription[i])])
as.character(block2$advisor0idDescription[i])]
as.character(block2$advisor0idDescription[i])
i
i <- 1
as.character(block2$advisor0idDescription[i])
block2$advisor0idDescription
block2$advisor0idDescription[1]
block2$advisor0idDescription[2]
block2$advisor0idDescription[3]
AdvisedTrial$advisor0idDescription
x <- singleAdvisorTrials(AdvisedTrial)
x$advisor0idDescription
sapply(1:nrow(x), function(i)
x[i, as.character(x$advisor0idDescription[i])])
block2 <- singleAdvisorTrials(AdvisedTrial)
block2$woa <- ""
block2$advisor0woaRaw <- sapply(1:nrow(block2), function(i)
block2[i, paste0(as.character(block2$advisor0idDescription[i]), ".woaRaw")])
block2$advisor0woaRaw
unlist(block2$advisor0woaRaw)
low <- 0
high <- 1
n <- 11
block2$woa <- ""
block2$advisor0woaRaw <- sapply(1:nrow(block2), function(i)
unlist(block2[i,
paste0(as.character(block2$advisor0idDescription[i]),
".woaRaw")]))
block2$woa[block2$advisor0woaRaw >= 1] <- ">=1"
for (x in rev(seq(low, high, length.out = n))) {
block2$woa[block2$advisor0woaRaw < x] <- paste0("<", x)
}
block2$woa <- factor(block2$woa)
block2 <- block2[!is.nan(block2$advisor0woaRaw), ]
ggplot(block2, aes(woa)) +
geom_histogram(stat = "count") +
facet_grid(hasFeedback ~ advisor0idDescription, labeller = label_both)
tmp <- aggregate(accuracyChange ~ pid + hasFeedback,
AdvisedTrial, mean, na.rm = T)
num2str(as.tibble(aggregate(accuracyChange ~ hasFeedback,
tmp, mean, na.rm = T)))
ggplot(tmp, aes(x = hasFeedback, y = accuracyChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA, aes(group = hasFeedback)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid))
tmp <- aggregate(accuracyChange ~ pid + hasFeedback + advisor0idDescription,
block2, mean, na.rm = T)
num2str(as.tibble(aggregate(accuracyChange ~
hasFeedback + advisor0idDescription,
tmp, mean, na.rm = T)))
ggplot(tmp,
aes(x = advisor0idDescription, y = accuracyChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA,
aes(group = advisor0idDescription)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid)) +
facet_wrap(~hasFeedback, labeller = label_both)
tmp <- aggregate(scoreChange ~ pid + hasFeedback, AdvisedTrial, mean, na.rm = T)
num2str(as.tibble(aggregate(scoreChange ~ hasFeedback, tmp, mean, na.rm = T)))
ggplot(tmp, aes(x = hasFeedback, y = scoreChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA, aes(group = hasFeedback)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid))
tmp <- aggregate(scoreChange ~ pid + hasFeedback + advisor0idDescription,
block2, mean, na.rm = T)
num2str(as.tibble(aggregate(scoreChange ~
hasFeedback + advisor0idDescription,
tmp, mean, na.rm = T)))
ggplot(tmp, aes(x = advisor0idDescription, y = scoreChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA,
aes(group = advisor0idDescription)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid)) +
facet_wrap(~hasFeedback, labeller = label_both)
tmp <- aggregate(estimateLeftChange ~ pid + hasFeedback,
AdvisedTrial, mean, na.rm = T)
num2str(as.tibble(aggregate(estimateLeftChange ~ hasFeedback,
tmp, mean, na.rm = T)))
ggplot(tmp, aes(x = hasFeedback, y = estimateLeftChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA, aes(group = hasFeedback)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid))
tmp <- aggregate(estimateLeftChange ~
pid + hasFeedback + advisor0idDescription,
block2, mean, na.rm = T)
num2str(as.tibble(aggregate(estimateLeftChange ~
hasFeedback + advisor0idDescription,
tmp, mean, na.rm = T)))
ggplot(tmp,
aes(x = advisor0idDescription, y = estimateLeftChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA,
aes(group = advisor0idDescription)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid)) +
facet_wrap(~hasFeedback, labeller = label_both)
tmp <- aggregate(confidenceChange ~ pid + hasFeedback,
AdvisedTrial, mean, na.rm = T)
num2str(as.tibble(aggregate(confidenceChange ~ hasFeedback,
tmp, mean, na.rm = T)))
ggplot(tmp, aes(x = hasFeedback, y = confidenceChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA, aes(group = hasFeedback)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid))
tmp <- aggregate(confidenceChange ~
pid + hasFeedback + advisor0idDescription,
block2, mean, na.rm = T)
num2str(as.tibble(aggregate(confidenceChange ~
hasFeedback + advisor0idDescription,
tmp, mean, na.rm = T)))
ggplot(tmp,
aes(x = advisor0idDescription, y = confidenceChange, colour = pid)) +
geom_violin(alpha = .25, colour = NA, fill = "grey75") +
geom_boxplot(fill = NA, outlier.color = NA,
aes(group = advisor0idDescription)) +
stat_summary(geom = "line", fun.y = mean,
aes(group = 1, linetype = "mean"), size = 1.5) +
geom_point(alpha = .5, aes(colour = pid)) +
facet_wrap(~hasFeedback, labeller = label_both)
eq <- NULL
for (a in advisorNames) {
eq <- c(eq, paste0(a, ".agreementChange"))
}
eq <- paste0("cbind(", paste(eq, collapse = ", "), ") ~ pid + hasFeedback")
tmp <- aggregate(as.formula(eq), AdvisedTrial, mean, na.rm = T)
grep(".agreement", names(AdvisedTrial), value = T)
aggregate(as.formula(eq), AdvisedTrial, mean, na.rm = T)
AdvisedTrial$Agreeing.agreementChange
aggregate(Agreeing.agreementChange ~ pid, AdvisedTrial, mean)
aggregate(Agreeing.agreementChange ~ pid, AdvisedTrial, mean, na.rm = T)
aggregate(cbind(Accurate.agreementChange, Agreeing.agreementChange) ~ pid, AdvisedTrial, mean, na.rm = T)
aggregate(cbind(Accurate.agreementChange) ~ pid, AdvisedTrial, mean, na.rm = T)
tmp <- aggregate(cbind(responseError, responseErrorFinal) ~ pid,
block2,
mean, na.rm = T)
r <- md.ttest(tmp$responseErrorFinal, tmp$responseError, c("*M*|last", "*M*|first"))
cat(r)
tmp <- aggregate(cbind(responseScore, responseScoreFinal) ~ pid,
block2,
mean, na.rm = T)
r <- md.ttest(tmp$responseScoreFinal, tmp$responseScore, c("*M*|last", "*M*|first"))
cat(r)
tmp <- aggregate(cbind(responseCorrect, responseCorrectFinal) ~ pid,
block2,
mean, na.rm = T)
r <- md.ttest(tmp$responseCorrectFinal,
tmp$responseCorrect,
c("*M*|last", "*M*|first"))
cat(r)
tmp <- aggregate(cbind(responseError, responseErrorFinal) ~ pid,
AdvisedTrial[AdvisedTrial$hasFeedback, ],
mean, na.rm = T)
r <- md.ttest(tmp$responseErrorFinal, tmp$responseError, c("*M*|last", "*M*|first"))
tmp <- aggregate(cbind(responseScore, responseScoreFinal) ~ pid,
AdvisedTrial[AdvisedTrial$hasFeedback, ],
mean, na.rm = T)
r <- md.ttest(tmp$responseScoreFinal, tmp$responseScore, c("*M*|last", "*M*|first"))
tmp <- aggregate(cbind(responseError, responseErrorFinal) ~ pid,
AdvisedTrial[!AdvisedTrial$hasFeedback, ],
mean, na.rm = T)
r <- md.ttest(tmp$responseErrorFinal, tmp$responseError, c("*M*|last", "*M*|first"))
tmp <- aggregate(cbind(responseScore, responseScoreFinal) ~ pid,
AdvisedTrial[!AdvisedTrial$hasFeedback, ],
mean, na.rm = T)
r <- md.ttest(tmp$responseScoreFinal, tmp$responseScore, c("*M*|last", "*M*|first"))
tmp <- aggregate(Accurate.woa ~ pid + hasFeedback,
AdvisedTrial, mean, na.rm = T)
r <- md.ttest(tmp$Accurate.woa[tmp$hasFeedback],
tmp$Accurate.woa[!tmp$hasFeedback],
labels = c("*M*|feedback", "*M*|¬feedback"))
tmp <- aggregate(Agreeing.woa ~ pid + hasFeedback,
AdvisedTrial, mean, na.rm = T)
r <- md.ttest(tmp$Agreeing.woa[tmp$hasFeedback],
tmp$Agreeing.woa[!tmp$hasFeedback],
labels = c("*M*|feedback", "*M*|¬feedback"))
tmp <- aggregate(advisor0woa ~
pid + hasFeedback + advisor0idDescription,
block2, mean)
# calculate woa for the advisor
tmp <- aggregate(advisor0woa ~
pid + hasFeedback + advisor0idDescription,
block2, mean, na.rm = T)
