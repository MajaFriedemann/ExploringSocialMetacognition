# Chunk 7
# Initial block is forced trials
tmp <- aggregate(advisorAgrees ~ pid + confidenceCategory + adviceType + initialCorrect,
data = trials[trials$type==trialTypes$force, ], FUN = mean)
tmp.aov <- aov(advisorAgrees ~ confidenceCategory * adviceType * initialCorrect +
Error(pid / (confidenceCategory + adviceType + initialCorrect)), data = tmp)
summary(tmp.aov)
# Chunk 8
gg.iii.iv <- ggplot(tmp, aes(y = advisorAgrees, x = as.factor(confidenceCategory), colour = as.factor(adviceType))) +
stat_summary(geom = 'point', size = 3, fun.y = mean, position = position_dodge(w)) +
stat_summary(geom = 'errorbar', fun.data = mean_cl_boot, position = position_dodge(w), size = 0.2) +
geom_point(alpha = 0.5, position = position_dodge(w)) +
facet_wrap(~initialCorrect, labeller = label_both) +
scale_x_discrete(name = 'Confidence Category', labels = c('Low', 'Med', 'High')) +
scale_color_discrete(name = 'Advice Type', labels = getAdviceTypeName(unique(tmp$adviceType))) +
scale_y_continuous(name = 'Advisor Agreement') +
labs(title = 'Observed agreement rate for each advisor by initial decision confidence and correctness\n on forced trials') +
style
gg.iii.iv
# Chunk 9
tmp <- aggregate(advisorAgrees ~ pid + confidenceCategory + adviceType + typeName,
data = trials[trials$initialCorrect==T, ], FUN = mean)
tmp.aov <- aov(advisorAgrees ~ confidenceCategory * adviceType * typeName +
Error(pid / (confidenceCategory + adviceType + typeName)), data = tmp)
summary(tmp.aov)
gg.iii.iv.i <- ggplot(tmp, aes(y = advisorAgrees, x = as.factor(confidenceCategory), colour = as.factor(adviceType))) +
stat_summary(geom = 'point', size = 3, fun.y = mean, position = position_dodge(w)) +
stat_summary(geom = 'errorbar', fun.data = mean_cl_boot, position = position_dodge(w), size = 0.2) +
geom_point(alpha = 0.5, position = position_dodge(w)) +
facet_wrap(~typeName, labeller = label_both) +
scale_x_discrete(name = 'Confidence Category', labels = c('Low', 'Med', 'High')) +
scale_color_discrete(name = 'Advice Type', labels = getAdviceTypeName(unique(tmp$adviceType))) +
scale_y_continuous(name = 'Advisor Agreement') +
labs(title = 'Observed agreement rate for each advisor by initial decision confidence and block\n on initially correct trials') +
style
gg.iii.iv.i
# Chunk 10
# Let's also check we got appropriate numbers of trials in each of the bins for
# each participant
df.iii.v <- aggregate(practice ~
pid + confidenceCategory + adviceType + initialCorrect + advisorAgrees,
data = trials, FUN = length)
#print(df.iii.v)
gg.iii.vi <- ggplot(df.iii.v, aes(y = practice, x = as.factor(confidenceCategory),
colour = as.factor(adviceType), shape = as.factor(advisorAgrees))) +
stat_summary(geom = 'point', size = 3, fun.y = mean, position = position_dodge(w)) +
stat_summary(geom = 'errorbar', fun.data = mean_cl_boot, position = position_dodge(w), size = 0.2) +
geom_point(alpha = 0.5, position = position_dodge(w)) +
facet_wrap(~initialCorrect, labeller = label_both) +
scale_x_discrete(name = 'Confidence Category', labels = c('Low', 'Med', 'High')) +
scale_color_discrete(name = 'Advice Type', labels = c('AiC', 'AiU')) +
scale_y_continuous(name = 'Trial Count') +
scale_shape_discrete(name = 'Advisor Agreement', labels = c('Disagree', 'Agree')) +
labs(title = 'Observed trial count for dis/agreement from each advisor by initial decision confidence\n and correctness') +
style
gg.iii.vi
# Chunk 11
participants$excluded <- sapply(participants$pid, function(pid){
ts <- which(all.trials$pid == pid)
# overall accuracy of initial decisions
v <- all.trials$initialAnswer[ts] == all.trials$correctAnswer[ts]
m <- mean(as.numeric(v), na.rm = T)
if(m < .6 | m > .85)
return('Accuracy')
# varied use of confidence scale
ts <- which(trials$pid == pid)
cCs <- aggregate(pid ~ confidenceCategory, data = trials[ts, ], FUN = length)
# All confidence categories must be used
if(nrow(cCs) < 3)
return ('Confidence')
# All confidence categories must have at least 5% of the number of trials
if(any(cCs$pid < length(ts)*.05))
return('Confidence.cat')
return(F)
})
# exclude on the basis of collecting too much data
if(sum(participants$excluded == F) > 50) {
tmp <- participants[participants$excluded == F, c('id', 'timeStart')]
tmp <- tmp$id[order(tmp$timeStart)]
tmp <- tmp[1:50]
participants$excluded[!(participants$id %in% tmp)] <- 'Excess.data'
}
all.participants <- participants
participants <- participants[participants$excluded==F, ]
# Remove excluded participants' data from other data frames
trials <- trials[trials$pid %in% participants$pid, ]
advisors <- advisors[advisors$pid %in% participants$pid, ]
questionnaires <- questionnaires[questionnaires$pid %in% participants$pid, ]
all.genTrustQ <- genTrustQ
genTrustQ <- genTrustQ[genTrustQ$pid %in% participants$pid, ]
df.iv <- aggregate(pid ~ excluded, data = all.participants, FUN = length)
names(df.iv) <- c('exclusionReason', 'count')
kable(df.iv)
unique(all.trials$id)
unique(all.trials$id[all.trials$practice==F])
all.participants$manipulationQuestion
all.participants$debriefComments
rawString <- '5b9839702f5e8a0001020601
18/09/2018, 03:53
00:53:49
MX5PC2Z4
AWAITING REVIEW
5b26c7047f78160001462baa
18/09/2018, 11:34
00:07:27
NOCODE
REJECTED
5afc14a00b2d5f00015693b4
18/09/2018, 11:34
00:53:40
MX5PC2Z4
AWAITING REVIEW
5b7b40a9e9670500012891f2
18/09/2018, 11:34
00:33:16
MX5PC2Z4
AWAITING REVIEW
5b985404a15058000124e508
18/09/2018, 12:11
00:53:03
MX5PC2Z4
AWAITING REVIEW
5b7558d53550e40001d52d85
18/09/2018, 13:22
00:27:23
MX5PC2Z4
AWAITING REVIEW
5ab7e30ffa3b4e000172db98
18/09/2018, 13:32
N/A
RETURNED
5a1dda5480acd8000104a12b
18/09/2018, 13:22
00:37:28
MX5PC2Z4
AWAITING REVIEW
59f709c1b47dfc0001b65fc9
18/09/2018, 13:22
00:48:41
MX5PC2Z4
AWAITING REVIEW
5b387415b6b4410001610900
18/09/2018, 13:22
00:59:53
MX5PC2Z4
AWAITING REVIEW
5588d7a1fdf99b304ee56840
18/09/2018, 13:25
00:42:21
MX5PC2Z4
AWAITING REVIEW
5b56b459e689060001c8f5ce
18/09/2018, 13:22
00:37:02
https://app.prolific.ac/submissions/complete?cc=MX5PC2Z4
AWAITING REVIEW
591e2e99529e9f0001ec705a
18/09/2018, 14:48
00:39:22
MX5PC2Z4
AWAITING REVIEW
5ab1550810682600010456c1
18/09/2018, 14:48
00:54:58
MX5PC2Z4
AWAITING REVIEW
57533f7c483c14000662f391
18/09/2018, 14:48
00:47:06
MX5PC2Z4
AWAITING REVIEW
55592b04fdf99b21cfd8f666
18/09/2018, 14:49
00:33:16
MX5PC2Z4
AWAITING REVIEW
5b1a86044c72120001f1ec4d
18/09/2018, 14:49
00:45:46
MX5PC2Z4
AWAITING REVIEW
5a647fc7b9e3b50001a6fe7b
18/09/2018, 14:49
01:29:14
MX5PC2Z4
AWAITING REVIEW
5ab254f5da23f1000125f625
18/09/2018, 14:49
00:54:23
MX5PC2Z4
AWAITING REVIEW
5b2b11a0007d870001c84414
18/09/2018, 14:49
00:40:10
MX5PC2Z4
AWAITING REVIEW
5b47e287bc06c90001f8b67d
18/09/2018, 14:49
00:32:07
MX5PC2Z4
AWAITING REVIEW
5b6bc9708d2e180001a2832d
18/09/2018, 14:49
00:37:30
MX5PC2Z4
AWAITING REVIEW
5b60c38937effa0001bcc32c
18/09/2018, 18:28
00:39:47
MX5PC2Z4
AWAITING REVIEW
5995ad4cf9db7d0001895973
18/09/2018, 18:28
00:38:11
MX5PC2Z4
AWAITING REVIEW
574eab79c18847000e071119
18/09/2018, 18:28
01:53:24
Manual Completion
APPROVED
581649f0b434f0000184d2a9
18/09/2018, 18:33
00:53:00
MX5PC2Z4
AWAITING REVIEW
59da5990ece378000107f3ca
18/09/2018, 18:28
00:34:24
MX5PC2Z4
AWAITING REVIEW
5892537355550f0001509c35
18/09/2018, 18:29
00:37:31
MX5PC2Z4
AWAITING REVIEW
5b94437e49a3980001b1f56b
18/09/2018, 18:28
00:45:09
MX5PC2Z4
AWAITING REVIEW
5a6c0147d5d4cb0001d659e4
18/09/2018, 18:29
01:00:23
MX5PC2Z4
AWAITING REVIEW
5a6b78840384310001945b47
18/09/2018, 18:28
00:40:57
NOCODE
AWAITING REVIEW
5b7d29a91ce15f0001404e4e
18/09/2018, 18:29
00:46:55
MX5PC2Z4
AWAITING REVIEW
5adf170beb604000015393f7
18/09/2018, 18:28
00:34:13
MX5PC2Z4
AWAITING REVIEW
5b72e0698bca7e000103215c
18/09/2018, 18:28
00:25:35
MX5PC2Z4
AWAITING REVIEW
59cff8eed227970001199862
18/09/2018, 18:28
00:34:08
MX5PC2Z4
AWAITING REVIEW
58cb5b4a444ade0001023eb0
18/09/2018, 18:36
01:19:48
MX5PC2Z4
AWAITING REVIEW
5a446ac4f7b7bc00014e00ff
18/09/2018, 18:28
00:46:11
MX5PC2Z4
AWAITING REVIEW
5a7dfd3d190420000155bbc4
18/09/2018, 18:28
00:48:03
MX5PC2Z4
AWAITING REVIEW
5abceb5f9534ba0001c6f3dd
18/09/2018, 18:28
N/A
TIMED-OUT
5484949efdf99b0379939cc6
18/09/2018, 18:29
00:26:43
MX5PC2Z4
AWAITING REVIEW
5b5a0ed1e56aea000118ad3a '
rawString <- paste(rawString , '593f123d6b824b0001a70456
18/09/2018, 18:37
00:46:51
MX5PC2Z4
AWAITING REVIEW
5b271fed8ecf3f00016194de
18/09/2018, 18:29
00:58:30
MX5PC2Z4
AWAITING REVIEW
5aad7bd3917b3b00010d4467
18/09/2018, 18:29
00:53:00
MX5PC2Z4
AWAITING REVIEW
5b4f6da7bdd8af000144c7df
18/09/2018, 18:29
01:06:24
MX5PC2Z4
AWAITING REVIEW
577f04836475d400015a8228
18/09/2018, 18:32
00:44:28
MX5PC2Z4
AWAITING REVIEW
5b8c6f880c32760001b851e6
18/09/2018, 18:30
00:39:31
MX5PC2Z4
AWAITING REVIEW
597f88ce7b7b850001fa4f3d
18/09/2018, 18:29
00:51:33
MX5PC2Z4
AWAITING REVIEW
5b7f280ef366a80001263ec3
18/09/2018, 18:29
00:34:08
MX5PC2Z4
AWAITING REVIEW
5b0918118c92f1000112660c
18/09/2018, 18:29
N/A
TIMED-OUT
5aafe1c4811b2000016f8d82
18/09/2018, 18:29
00:42:34
MX5PC2Z4
AWAITING REVIEW
5b9c7125fd308e0001ff8751
18/09/2018, 18:29
N/A
RETURNED
59899fe0fd8cca00015cc47b
18/09/2018, 18:35
01:38:11
MX5PC2Z4
AWAITING REVIEW
5aeaaf9b9bebfc0001cd66e6
18/09/2018, 18:34
00:44:40
MX5PC2Z4
AWAITING REVIEW
5b74641086b60700014ef85c
18/09/2018, 20:00
00:51:54
MX5PC2Z4
AWAITING REVIEW
5ab1677246e6e70001ae267d
18/09/2018, 20:00
00:35:04
MX5PC2Z4
AWAITING REVIEW
5a80bf6e2a842c0001fc9064
18/09/2018, 20:00
00:34:13
MX5PC2Z4
AWAITING REVIEW
5b71d8c1ddd1aa00012ca0df
18/09/2018, 21:40
00:40:13
MX5PC2Z4
AWAITING REVIEW
59c86f966a287600011c393e ')
source('F:/www/vhosts/localhost/ExploringSocialMetacognition/analysis/advisorChoiceBonuses.R')
tmp <- aggregate(advisorAgrees ~ pid + confidenceCategory + adviceType + initialCorrect, data = trials, FUN = mean)
aov.iii.i <- aov(advisorAgrees ~ confidenceCategory * adviceType * initialCorrect +
Error(pid / (confidenceCategory + adviceType + initialCorrect)), data = tmp)
print(summary(aov.iii.i))
df.vii <- NULL
tmp <- aggregate(id ~ confidenceCateogry + pid, trials, length)
for(cc in confidenceCategories)) {
v <- tmp$id[tmp$confidenceCategory==cc]
cl <- mean_cl_normal(v)
rn <- range(v)
df.vii <- rbind(df.vii, data.frame(confidenceCategory = cc,
meanN = cl$y,
cl95L = cl$ymin,
cl95H = cl$ymax,
rangeL = rn[1],
rangeH = rn[2]))
}
kable(round(df.vii,2))
df.vii <- NULL
tmp <- aggregate(id ~ confidenceCateogry + pid, trials, length)
for(cc in confidenceCategories) {
v <- tmp$id[tmp$confidenceCategory==cc]
cl <- mean_cl_normal(v)
rn <- range(v)
df.vii <- rbind(df.vii, data.frame(confidenceCategory = cc,
meanN = cl$y,
cl95L = cl$ymin,
cl95H = cl$ymax,
rangeL = rn[1],
rangeH = rn[2]))
}
kable(round(df.vii,2))
tmp <- aggregate(id ~ confidenceCateogry + pid, trials, length)
tmp
tmp <- aggregate(id ~ confidenceCateogry + pid, trials, length)
df.vii <- NULL
tmp <- aggregate(id ~ confidenceCategory + pid, trials, length)
for(cc in confidenceCategories) {
v <- tmp$id[tmp$confidenceCategory==cc]
cl <- mean_cl_normal(v)
rn <- range(v)
df.vii <- rbind(df.vii, data.frame(confidenceCategory = cc,
meanN = cl$y,
cl95L = cl$ymin,
cl95H = cl$ymax,
rangeL = rn[1],
rangeH = rn[2]))
}
kable(round(df.vii,2))
df.vii <- NULL
tmp <- aggregate(id ~ confidenceCategory + pid, trials, length)
for(cc in confidenceCategories) {
v <- tmp$id[tmp$confidenceCategory==cc]
cl <- mean_cl_normal(v)
rn <- range(v)
df.vii <- rbind(df.vii, data.frame(confidenceCategory = cc,
meanN = cl$y,
cl95L = cl$ymin,
cl95H = cl$ymax,
rangeL = rn[1],
rangeH = rn[2]))
}
#kable(round(df.vii,2))
df.vii.2 <- NULL
tmp <- NULL
for(pid in unique(trials$pid)) {
v <- trials$confidenceCategory[trials$pid==pid]
tmp <- rbind(tmp, data.frame(pid,
low=mean(v==confidenceCategories$low),
med=mean(v==confidenceCategories$medium),
high=mean(v==confidenceCategories$high)))
}
for(cc in confidenceCategories) {
v <- tmp[ ,2+cc] # for each confidence category in tmp
cl <- mean_cl_normal(v)
rn <- range(v)
df.vii.2 <- rbind(df.vii.2, data.frame(confidenceCategory = cc,
meanProp = cl$y,
cl95L = cl$ymin, cl95H = cl$ymax,
rangeL = rn[1], rangeH = rn[2]))
}
kable(round(df.vii.2,2))
aov.viii.ii <- manova(cbind(ability, likeability, benevolence) ~ adviceType * timepoint,# + Error(pid),
data = questionnaires)
print(summary(aov.viii.ii))
df.viii.ii <- NULL
tmp <- questionnaires[ ,c('likeability', 'benevolence', 'ability', 'pid', 'adviceType', 'timepoint')]
for(v in c('likeability', 'ability', 'benevolence')) {
tmp$v <- tmp[ ,v]
tmp.2 <- aggregate(v ~ adviceType + timepoint + pid,
data = tmp,
FUN = mean)
for(aT in c(5,6)) {
if(aT == adviceTypes$neutral)
next()
for(tp in unique(tmp.2$timepoint)) {
x <- tmp.2$v[tmp.2$adviceType==aT & tmp.2$timepoint==tp]
df.viii.ii <- rbind(df.viii.ii, data.frame(domain = v,
adviceType=aT,
timepoint=tp,
mu=mean(x),
ci95low=mean_cl_normal(x)$ymin,
ci95hi =mean_cl_normal(x)$ymax))
}
}
}
df.viii.ii[ ,4:6] <- round(df.viii.ii[ ,4:6],2)
df.viii.ii$adviceType <- sapply(df.viii.ii$adviceType, getAdviceTypeName)
kable(df.viii.ii[order(df.viii.ii$timepoint), ])
df.viii.ii <- NULL
tmp <- questionnaires[ ,c('likeability', 'benevolence', 'ability', 'pid', 'adviceType', 'timepoint')]
for(v in c('likeability', 'ability', 'benevolence')) {
tmp$v <- tmp[ ,v]
tmp.2 <- aggregate(v ~ adviceType + timepoint + pid,
data = tmp,
FUN = mean)
for(aT in unique(trials$adviceType)) {
for(tp in unique(tmp.2$timepoint)) {
x <- tmp.2$v[tmp.2$adviceType==aT & tmp.2$timepoint==tp]
df.viii.ii <- rbind(df.viii.ii, data.frame(domain = v,
adviceType=aT,
timepoint=tp,
mu=mean(x),
ci95low=mean_cl_normal(x)$ymin,
ci95hi =mean_cl_normal(x)$ymax))
}
}
}
df.viii.ii[ ,4:6] <- round(df.viii.ii[ ,4:6],2)
df.viii.ii$adviceType <- sapply(df.viii.ii$adviceType, getAdviceTypeName)
kable(df.viii.ii[order(df.viii.ii$timepoint), ])
