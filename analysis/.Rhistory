unique(decisions$number)
length(unique(decisions$number))
left_join(AdvisedTrial, decisions)
left_join(AdvisedTrial, decisions, by = c("pid", "number"))
left_join(AdvisedTrial, decisions[, grepl("(Accurate|Agreeing)\.", names(decisions))], by = c("pid", "number"))
left_join(AdvisedTrial, decisions[, grepl("(Accurate|Agreeing)\\.", names(decisions))], by = c("pid", "number"))
left_join(AdvisedTrial, decisions[, grepl("(Accurate|Agreeing|pid)", names(decisions))], by = c("pid", "number"))
left_join(AdvisedTrial, decisions[, grepl("(Accurate|Agreeing|pid|number)", names(decisions))], by = c("pid", "number"))
left_join(AdvisedTrial, decisions[, grepl("(Accurate|Agreeing|pid|number)", names(decisions))], by = c("pid", "number"))
unique(AdvisedTrial$advisor1idDescription)
paste0(unique(AdvisedTrial$advisor1idDescription))
paste0(unique(AdvisedTrial$advisor1idDescription), collapse = "|")
# bind advice types back into AdvisedTrial because we don't want decisions split
# by first/last
AdvisedTrial <-
left_join(AdvisedTrial,
decisions[, grepl(paste0("(pid|number|",
unique(AdvisedTrial$advisor1idDescription),
collapse = "|"), ")", names(decisions))],
by = c("pid", "number"))
paste0("(pid|number|",
paste0(
unique(
AdvisedTrial$advisor1idDescription),
collapse = "|"),
")")
paste0("(pid|number|",
paste0(
unique(
c(AdvisedTrial$advisor1idDescription,
AdvisedTrial$advisor2idDescription)),
collapse = "|"),
")")
paste0("(pid|number|",
paste0(
c(unique(
AdvisedTrial$advisor1idDescription),
unique(
AdvisedTrial$advisor2idDescription)),
collapse = "|"),
")")
unique(
AdvisedTrial$advisor1idDescription)
c(levels(
AdvisedTrial$advisor1idDescription),
levels(
AdvisedTrial$advisor2idDescription))
unique(c(levels(
AdvisedTrial$advisor1idDescription),
levels(
AdvisedTrial$advisor2idDescription)))
grepl(paste0("(pid|number|",
paste0(
unique(c(levels(
AdvisedTrial$advisor1idDescription),
levels(
AdvisedTrial$advisor2idDescription))),
collapse = "|"),
")")
paste0("(pid|number|",
paste0(
unique(c(levels(
AdvisedTrial$advisor1idDescription),
levels(
AdvisedTrial$advisor2idDescription))),
collapse = "|"),
")")
advisorNames <- NULL
for (i in 1:length(grep("advisor[0-9+]idDescription", names(AdvisedTrial)))) {
advisorNames <- unique(c(advisorNames,
levels(AdvisedTrial[paste0("advisor",
i,
"idDescription")])))
}
advisorNames
grep("advisor[0-9+]idDescription", names(AdvisedTrial))
length(grep("advisor[0-9+]idDescription", names(AdvisedTrial)))
i
paste0("advisor",
i,
"idDescription")
levels(AdvisedTrial[paste0("advisor",
i,
"idDescription")])
AdvisedTrial[paste0("advisor",
i,
"idDescription")]
AdvisedTrial[, paste0("advisor",
i,
"idDescription")]
AdvisedTrial[paste0("advisor",
i,
"idDescription")]
levels(AdvisedTrial[paste0("advisor",
i,
"idDescription")])
for (i in 1:length(grep("advisor[0-9+]idDescription", names(AdvisedTrial)))) {
advisorNames <- unique(c(advisorNames,
AdvisedTrial[paste0("advisor", i, "idDescription")]))
}
advisorNames
advisorNames <- NULL
for (i in 1:length(grep("advisor[0-9+]idDescription", names(AdvisedTrial)))) {
advisorNames <- unique(c(advisorNames,
unique(AdvisedTrial[paste0("advisor", i,
"idDescription")])))
}
advisorNames
advisorNames <- NULL
for (i in 1:length(grep("advisor[0-9+]idDescription", names(AdvisedTrial)))) {
advisorNames <- unique(c(advisorNames,
unlist(unique(AdvisedTrial[paste0("advisor", i,
"idDescription")]))))
}
advisorNames
advisorNames <- NULL
for (i in 1:length(grep("advisor[0-9+]idDescription", names(AdvisedTrial)))) {
x <- lapply(AdvisedTrial[paste0("advisor", i, "idDescription")], as.character)
advisorNames <- unique(c(advisorNames, x))
}
advisorNames
x
unlist(x)
unique(x)
unique(unlist(x))
advisorNames <- NULL
for (i in 1:length(grep("advisor[0-9+]idDescription", names(AdvisedTrial)))) {
x <- lapply(AdvisedTrial[paste0("advisor", i, "idDescription")], as.character)
advisorNames <- unique(c(advisorNames, unique(unlist(x))))
}
advisorNames
aggregate(Accurate.nominalType ~ pid, AdvisedTrial, length)
names(AdvisedTrial)
left_join(AdvisedTrial,
decisions[, grepl(paste0("(pid|number|",
paste0(advisorNames, collapse = "|"),
")"), names(decisions))],
by = c("pid", "number"))
# bind advice types back into AdvisedTrial because we don't want decisions split
# by first/last
AdvisedTrial <-
left_join(AdvisedTrial,
decisions[, grepl(paste0("(pid|number|",
paste0(advisorNames, collapse = "|"),
")"), names(decisions))],
by = c("pid", "number"))
aggregate(Accurate.nominalType ~ pid, AdvisedTrial, length)
tmp <- aggregate(Accurate.nominalType ~ pid, AdvisedTrial, FUN = function(x) x == "disagreeReflected")
tmp
aggregate(Accurate.nominalType ~ pid, AdvisedTrial, FUN = function(x) mean(x == "disagreeReflected"))
advisors
adviceTypes <- NULL
# Gather a list of advisor names and advice types
advisorNames <- NULL
x <- lapply(AdvisedTrial[paste0("advisor", i, "idDescription")], as.character)
for (i in 1:length(grep("advisor[0-9+]idDescription", names(AdvisedTrial)))) {
x <- lapply(AdvisedTrial[paste0("advisor", i, "idDescription")], as.character)
advisorNames <- unique(c(advisorNames, unique(unlist(x))))
y <- lapply(AdvisedTrial[paste0("advisor", i, "actualType")], as.character)
adviceTypes <- unique(c(adviceTypes, unique(unlist(y))))
y <- lapply(AdvisedTrial[paste0("advisor", i, "nominalType")], as.character)
adviceTypes <- unique(c(adviceTypes, unique(unlist(y))))
}
advisorNames
adviceTypes
a
x <- adviceTypes[1]
eq <- as.formula(paste0(a, ".nominalType ~ pid"))
aggregate(eq, AdvisedTrial, function(q) mean(q == x))
tmp <- NULL
for (a in advisorNames) {
r <- tibble(advisor = a)
for (x in adviceTypes) {
eq <- as.formula(paste0(a, ".nominalType ~ pid"))
r[, x] <- mean(aggregate(eq, AdvisedTrial, function(q) mean(q == x))[2])
}
tmp <- rbind(tmp, r)
}
tmp
aggregate(eq, AdvisedTrial, function(q) mean(q == x))
mean(aggregate(eq, AdvisedTrial, function(q) mean(q == x))[2])
mean(aggregate(eq, AdvisedTrial, function(q) mean(q == x))$Agreeing.nominalType)
mean(aggregate(eq, AdvisedTrial, function(q) mean(q == x))[, 2])
tmp <- NULL
for (a in advisorNames) {
r <- tibble(advisor = a)
for (x in adviceTypes) {
eq <- as.formula(paste0(a, ".nominalType ~ pid"))
r[, x] <- mean(aggregate(eq, AdvisedTrial, function(q) mean(q == x))[, 2])
}
tmp <- rbind(tmp, r)
}
tmp
prop2str(tmp)
tmp <- NULL
for (a in advisorNames) {
r <- tibble(advisor = a)
for (x in adviceTypes) {
eq <- as.formula(paste0(a, ".actualType ~ pid"))
r[, x] <- mean(aggregate(eq, AdvisedTrial, function(q) mean(q == x))[, 2])
}
tmp <- rbind(tmp, r)
}
prop2str(tmp)
AdvisedTrial$Accurate.adviceCentre
AdvisedTrial$Accurate.adviceWidth
AdvisedTrial$correctAnswer
for (a in advisorNames) {
AdvisedTrial[, paste0(a, ".accurate")] <-
AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2) >=
AdvisedTrial[, correctAnswer] &
AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2) <=
AdvisedTrial[, correctAnswer]
}
for (a in advisorNames) {
AdvisedTrial[, paste0(a, ".accurate")] <-
AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2) >=
AdvisedTrial[, "correctAnswer"] &
AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2) <=
AdvisedTrial[, "correctAnswer"]
}
tmp <- NULL
for (a in advisorNames) {
AdvisedTrial[, paste0(a, ".accurate")] <-
AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2) >=
AdvisedTrial[, "correctAnswer"] &
AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2) <=
AdvisedTrial[, "correctAnswer"]
eq <- as.formula(paste0(a, ".accurate ~ pid"))
tmp <- rbind(tibble(advisor = a,
accuracy = mean(aggregate(eq, AdvisedTrial, mean)[, 2])))
}
prop2str(tmp, precision = 3)
a
AdvisedTrial$Agreeing.accurate
tmp <- NULL
for (a in advisorNames) {
AdvisedTrial[, paste0(a, ".accurate")] <-
(AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) >=
AdvisedTrial[, "correctAnswer"]
# &
#   AdvisedTrial[, paste0(a, ".adviceCentre")] +
#   (AdvisedTrial[, paste0(a, ".adviceWidth")] / 2) <=
#   AdvisedTrial[, "correctAnswer"]
eq <- as.formula(paste0(a, ".accurate ~ pid"))
tmp <- rbind(tmp, tibble(advisor = a,
accuracy = mean(aggregate(eq,
AdvisedTrial,
mean)[, 2])))
}
prop2str(tmp, precision = 3)
tmp <- NULL
for (a in advisorNames) {
AdvisedTrial[, paste0(a, ".accurate")] <-
(AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) >=
AdvisedTrial[, "correctAnswer"] &
(AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) <=
AdvisedTrial[, "correctAnswer"]
eq <- as.formula(paste0(a, ".accurate ~ pid"))
tmp <- rbind(tmp, tibble(advisor = a,
accuracy = mean(aggregate(eq,
AdvisedTrial,
mean)[, 2])))
}
prop2str(tmp, precision = 3)
tmp <- NULL
for (a in advisorNames) {
AdvisedTrial[, paste0(a, ".accurate")] <-
(AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) <=
AdvisedTrial[, "correctAnswer"] &
(AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) >=
AdvisedTrial[, "correctAnswer"]
eq <- as.formula(paste0(a, ".accurate ~ pid"))
tmp <- rbind(tmp, tibble(advisor = a,
accuracy = mean(aggregate(eq,
AdvisedTrial,
mean)[, 2])))
}
prop2str(tmp, precision = 3)
tmp <- NULL
for (a in advisorNames) {
AdvisedTrial[, paste0(a, ".accurate")] <-
(AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) <=
AdvisedTrial[, "correctAnswer"] &
(AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) >=
AdvisedTrial[, "correctAnswer"]
AdvisedTrial[, paste0(a, "error")] <-
abs(AdvisedTrial[, paste0(a, "adviceCentre")] -
AdvisedTrial[, "correctAnswer"])
eq <- as.formula(paste0("cbind(", a, ".accurate, ", a, "error) ~ pid"))
r <- aggregate(eq, AdvisedTrial, mean)
tmp <- rbind(tmp, tibble(advisor = a,
accuracy = mean(r[, 2]),
error = mean(r[, 3])))
}
tmp <- NULL
for (a in advisorNames) {
AdvisedTrial[, paste0(a, ".accurate")] <-
(AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) <=
AdvisedTrial[, "correctAnswer"] &
(AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) >=
AdvisedTrial[, "correctAnswer"]
AdvisedTrial[, paste0(a, ".error")] <-
abs(AdvisedTrial[, paste0(a, ".adviceCentre")] -
AdvisedTrial[, "correctAnswer"])
eq <- as.formula(paste0("cbind(", a, ".accurate, ", a, ".error) ~ pid"))
r <- aggregate(eq, AdvisedTrial, mean)
tmp <- rbind(tmp, tibble(advisor = a,
accuracy = mean(r[, 2]),
error = mean(r[, 3])))
}
prop2str(tmp, precision = 3)
tmp <- NULL
for (a in advisorNames) {
minA <- AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)
maxA <- AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)
minP <- AdvisedTrial[, "responseEstimateLeft"]
maxP <- minP + AdvisedTrial[, "responseMarkerWidth"]
AdvisedTrial[, paste0(a, ".agree")] <-
((minA >= minP) & (minA <= maxP)) | ((maxA >= minP) & (maxA <= minP))
eq <- as.formula(paste0(a, ".agree ~ pid"))
r <- aggregate(eq, AdvisedTrial, mean)
tmp <- rbind(tmp, tibble(advisor = a,
agreement = mean(r[, 2])))
}
prop2str(tmp, precision = 3)
tmp <- NULL
for (a in advisorNames) {
AdvisedTrial[, paste0(a, ".accurate")] <-
(AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) <=
AdvisedTrial[, "correctAnswer"] &
(AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) >=
AdvisedTrial[, "correctAnswer"]
AdvisedTrial[, paste0(a, ".error")] <-
abs(AdvisedTrial[, paste0(a, ".adviceCentre")] -
AdvisedTrial[, "correctAnswer"])
eq <- as.formula(paste0("cbind(", a, ".accurate, ", a, ".error) ~ pid"))
r <- aggregate(eq, AdvisedTrial, mean)
r$advisor = a
tmp <- rbind(tmp, as.tibble(r))
}
tmp <- NULL
for (a in advisorNames) {
AdvisedTrial[, paste0(a, ".accurate")] <-
(AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) <=
AdvisedTrial[, "correctAnswer"] &
(AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) >=
AdvisedTrial[, "correctAnswer"]
AdvisedTrial[, paste0(a, ".error")] <-
abs(AdvisedTrial[, paste0(a, ".adviceCentre")] -
AdvisedTrial[, "correctAnswer"])
eq <- as.formula(paste0("cbind(", a, ".accurate, ", a, ".error) ~ pid"))
r <- aggregate(eq, AdvisedTrial, mean)
colnames(r) <- c("pid", "accuracy", "error")
r$advisor = a
tmp <- rbind(tmp, as.tibble(r))
}
prop2str(aggregate(cbind(accuracy, error) ~ advisor, tmp, mean), precision = 3)
prop2str(as.tibble(aggregate(cbind(accuracy, error) ~ advisor, tmp, mean)), precision = 3)
ggplot(tmp, aes(x = advisor, y = accuracy, colour = pid, fill = NA)) +
geom_violin(colour = NA, fill = "grey75") +
geom_boxplot(outlier.colour = NA) +
geom_point()
ggplot(tmp, aes(x = advisor, y = accuracy, colour = pid)) +
geom_violin(colour = NA, fill = "grey75") +
geom_boxplot(outlier.colour = NA) +
geom_point()
ggplot(tmp, aes(x = advisor, y = accuracy, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA) +
geom_point()
ggplot(tmp, aes(x = advisor, y = accuracy, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = 1)) +
geom_point()
ggplot(tmp, aes(x = advisor, y = accuracy, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_point()
tmp <- NULL
for (a in advisorNames) {
minA <- AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)
maxA <- AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)
minP <- AdvisedTrial[, "responseEstimateLeft"]
maxP <- minP + AdvisedTrial[, "responseMarkerWidth"]
AdvisedTrial[, paste0(a, ".agree")] <-
((minA >= minP) & (minA <= maxP)) | ((maxA >= minP) & (maxA <= minP))
eq <- as.formula(paste0(a, ".agree ~ pid"))
r <- aggregate(eq, AdvisedTrial, mean)
colnames(r) <- c("pid", "agreement")
tmp <- rbind(tmp, r)
}
prop2str(as.tibble(aggregate(agreement ~ advisor, tmp, mean)),
precision = 3)
tmp <- NULL
for (a in advisorNames) {
minA <- AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)
maxA <- AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)
minP <- AdvisedTrial[, "responseEstimateLeft"]
maxP <- minP + AdvisedTrial[, "responseMarkerWidth"]
AdvisedTrial[, paste0(a, ".agree")] <-
((minA >= minP) & (minA <= maxP)) | ((maxA >= minP) & (maxA <= minP))
eq <- as.formula(paste0(a, ".agree ~ pid"))
r <- aggregate(eq, AdvisedTrial, mean)
colnames(r) <- c("pid", "agreement")
r$advisor <- a
tmp <- rbind(tmp, r)
}
prop2str(as.tibble(aggregate(agreement ~ advisor, tmp, mean)),
precision = 3)
tmp <- NULL
for (a in advisorNames) {
AdvisedTrial[, paste0(a, ".accurate")] <-
(AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) <=
AdvisedTrial[, "correctAnswer"] &
(AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) >=
AdvisedTrial[, "correctAnswer"]
AdvisedTrial[, paste0(a, ".error")] <-
abs(AdvisedTrial[, paste0(a, ".adviceCentre")] -
AdvisedTrial[, "correctAnswer"])
eq <- as.formula(paste0("cbind(", a, ".accurate, ", a, ".error) ~ pid"))
r <- aggregate(eq, AdvisedTrial, mean)
colnames(r) <- c("pid", "accuracy", "error")
r$advisor = a
tmp <- rbind(tmp, as.tibble(r))
}
prop2str(as.tibble(aggregate(cbind(accuracy, error) ~ advisor, tmp, mean)),
precision = 3)
spread(tmp, "var", "value", -pid)
tmp <- gather(tmp, "var", "value", -pid)
tmp
tmp <- NULL
for (a in advisorNames) {
AdvisedTrial[, paste0(a, ".accurate")] <-
(AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) <=
AdvisedTrial[, "correctAnswer"] &
(AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)) >=
AdvisedTrial[, "correctAnswer"]
AdvisedTrial[, paste0(a, ".error")] <-
abs(AdvisedTrial[, paste0(a, ".adviceCentre")] -
AdvisedTrial[, "correctAnswer"])
eq <- as.formula(paste0("cbind(", a, ".accurate, ", a, ".error) ~ pid"))
r <- aggregate(eq, AdvisedTrial, mean)
colnames(r) <- c("pid", "accuracy", "error")
r$advisor = a
tmp <- rbind(tmp, as.tibble(r))
}
prop2str(as.tibble(aggregate(cbind(accuracy, error) ~ advisor, tmp, mean)),
precision = 3)
gather(tmp, "var", "value", accuracy:error)
ggplot(tmp, aes(x = advisor, y = value, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_point() +
facet_wrap(~ var, scales = "free_y")
tmp <- gather(tmp, "var", "value", accuracy:error)
ggplot(tmp, aes(x = advisor, y = value, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_point() +
facet_wrap(~ var, scales = "free_y")
tmp <- NULL
for (a in advisorNames) {
minA <- AdvisedTrial[, paste0(a, ".adviceCentre")] -
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)
maxA <- AdvisedTrial[, paste0(a, ".adviceCentre")] +
(AdvisedTrial[, paste0(a, ".adviceWidth")] / 2)
minP <- AdvisedTrial[, "responseEstimateLeft"]
maxP <- minP + AdvisedTrial[, "responseMarkerWidth"]
AdvisedTrial[, paste0(a, ".agree")] <-
((minA >= minP) & (minA <= maxP)) | ((maxA >= minP) & (maxA <= minP))
eq <- as.formula(paste0(a, ".agree ~ pid"))
r <- aggregate(eq, AdvisedTrial, mean)
colnames(r) <- c("pid", "agreement")
r$advisor <- a
tmp <- rbind(tmp, r)
}
prop2str(as.tibble(aggregate(agreement ~ advisor, tmp, mean)),
precision = 3)
ggplot(tmp, aes(x = advisor, y = agreement, colour = pid)) +
geom_violin(colour = NA, fill = "grey75", alpha = .25) +
geom_boxplot(outlier.colour = NA, fill = NA, aes(group = advisor)) +
geom_point()
