/*
Static structure of the elements in the experiment.
*/

@keyframes addTabRight {
    from { margin-left: 110%; }
    to { margin-left: 0; }
}
@keyframes addTabLeft {
    from { left: -110%; }
    to { left: 0; }
}

:root {
    --content-height: 500;
    --content-width: 900;

    --font-size-small: 24px;
    --font-size-medium: 32px;

    --tag-border-radius: 0.5em;
}

body {
    margin: 0;
    height: 100%;
    width: 100%;
    background-color: white;
    font-family: 'Open Sans', 'Arial', sans-serif;
    font-size: 18px;
    line-height: 1.6em;
    text-align: center;
}
div {
    position: relative;
    /* Text placed directly in a DIV should not be selectable */
    user-select: none;
}

:focus {
    outline: none;
}

.content-wrapper {
    height: 100vh;
    display: flex;
    flex-direction: column;
    overflow: scroll;
    background-color: white;
}

/* Sizing for non-fullscreen displays */
@media screen and (max-height: 500px) {
    body {
        font-size: 14px;
    }
    #content {
        width: 100%;
        height: 100%;
        border: none;
        border-radius: 0;
    }
    #instructions {
        height: 100%;
    }
    esm-instruction {
        width: 100%;
        height: 100%;
        top: 0;
    }
    esm-instruction-page {
        border: none;
        border-radius: 0;
    }
}

#content {
    height: calc(var(--content-height) * 1px);
    width: calc(var(--content-width) * 1px);
    min-height: calc(var(--content-height) * 1px);
    min-width: calc(var(--content-width) * 1px);
    max-width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    border: 4px solid black;
    border-radius: 5px;
    margin: auto;
    overflow: hidden;
    background-color: white;
}

#content > .frame {
    display: inline-flex;
    flex-wrap: nowrap;
    flex-direction: row;
    justify-content: space-between;
}

#content > .frame.top {
    height: 60rem;
    margin-top: .2em;
}

#content > .frame.bottom {
    height: 40rem;
}

#content > .frame.top > .left {
    width: 20%;
    display: flex;
    flex-direction: column;
}
#content > .frame.top > .middle {
    width: 70%;
    padding: 5%;
}

#stimulus {
    height: calc(100% - 2em);
    width: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    opacity: 1;
    font-size: var(--font-size-medium);
}
#stimulus * {
    max-height: 100%;
}
#stimulus > *:first-child {
    margin: auto;
}

#prompt {
    margin: .25em 0;
    font-size: var(--font-size-medium);
    height: 2em;
}

#response-panel {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    transition: opacity 0.5s, box-shadow 0.5s;
    opacity: 0.2;
}

#instructions {
    position: absolute;
    width: 100%;
}

#training-instructions {
    position: absolute;
    bottom: 0;
    width: 100%;
    display: none;
    font-style: italic;
    font-size: var(--font-size-small);
    background-color: var(--esm-help-backgroundColor);
    border: 1px solid var(--esm-help-borderColor);
}

#training-instructions.top {
    bottom: unset;
    top: 0;
}

@keyframes progress-demo {
    from { width: 0; }
    to { width: 100% }
}

.progress-bar {
    display: block;
    height: .2em;
    width: 99%;
    margin: 2px auto;
}
.progress-bar .outer {
    height: 100%;
    width: 75%;
    border: 1px solid transparent;
    background-color: #00ccfc;
}
.progress-bar .inner {
}

.advisor-key-row {
    display: flex;
    flex-direction: column;
    line-height: 1em;
    padding: .25em 0;
    margin: 0.25em 0 0 0;
    font-size: 32px;
}
.left .advisor-key-row {
    border-top-right-radius: var(--tag-border-radius);
    border-bottom-right-radius: var(--tag-border-radius);
    box-shadow: 1px 1px 1px 0 black;

    width: 100%;
    animation: addTabLeft 1s forwards;
}
.right .advisor-key-row {
    border-top-left-radius: var(--tag-border-radius);
    border-bottom-left-radius: var(--tag-border-radius);
    box-shadow: -1px 1px 1px 0 black;

    width: 100%;
    animation: addTabRight 1s forwards;
}

/* Markers */
@keyframes adviceAnimation1st {
    from {
        left: calc(-5% + 6.5em);
        top: calc(2em - 300px - 20vh - 9.5em);
    }
}
@keyframes adviceAnimation2nd {
    from {
        left: calc(-5% + 6.5em);
        top: calc(2em - 300px - 20vh - 4.5em);
    }
}

.marker {
    height: 100%;
    width: 100%;
}
.marker svg {
    width: 1.1em;
    height: 1.1em;
    stroke-width: 2px;
}

.response-marker {
    font-size: 14px;
    z-index: 10;
}

.response-marker:not(.advisor) {
    background-color: var(--group-1-primary);
}

.response-marker.advisor {
    position: absolute;
    height: 1.2em;
    top: -1.2em;
    animation: adviceAnimation1st 1s forwards ease-in-out;
    z-index: 1;
}
.response-marker.advisor + .response-marker.advisor {
    animation-name: adviceAnimation2nd;
}
.response-marker.advisor.static {
    animation: none;
    position: unset;
    top: 0;
}

.response-marker.advisor:not(.static),
.response-marker.feedback,
.response-marker.ghost {
    display: none;
}

.response-marker.feedback {
    color: #ffe96e;
    font-size: 14px;
    font-weight: bold;
    position: absolute;
    transform: translateX(calc(-50% - 2px)) scale(3);
    background-color: transparent;
    border: none;
    box-shadow: none;
    bottom: 6em;
}
.response-marker.feedback::before {
    left: 50%;
    transform: translateX(-50%);
    background-color: black;
    height: 120%;
    content: "";
    width: 1px;
    border-radius: 100%;
    top: 80%;
    position: absolute;
    z-index: -1;
}

.response-marker.ghost {
    opacity: .5;
}

#help-button {
    position: absolute;
    font-size: 1em;
    font-weight: bold;
    margin: 0.3em;
    padding: 0.3em;
    border-radius: 1em;
    width: 2em;
    height: 2em;
    border: 1px solid black;
    background-color: transparent;
    top: 0;
    right: 0;
}
#help-button.show-help {
    background-color: yellow;
}

/* Counter widget */
@keyframes tickAway {
    from {
        stroke-dashoffset: 0;
    }
    to {
        stroke-dashoffset: -63;
    }
}
.counter svg {
    fill: transparent;
    stroke: black;
    stroke-width: 1px;
    stroke-dasharray: 63px;
    animation: tickAway forwards linear;
}
.counter circle {
    transform: rotateZ(270deg);
    transform-origin: 50% 50%;
}
.counter span {
    position: absolute;
    top: calc(50% - 12px);
    left: calc(50% - 10px);
    width: 20px;
    line-height: 20px;
    font-size: 14px;
}
